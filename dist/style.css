/*!*********************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./sass/main.scss ***!
  \*********************************************************************************************************/
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

:root {
  font-size: 16px;
}

* {
  box-sizing: border-box;
}

body {
  font-family: "Poppins", sans-serif;
  line-height: 1.5;
  padding-top: 5rem;
}

.container__main > * {
  padding-left: 2rem;
  padding-right: 2rem;
  max-width: 1400px;
  margin-left: auto;
  margin-right: auto;
  box-sizing: content-box;
}
.container__main .container__full {
  max-width: 100%;
}

.margins__topBottom {
  margin-top: 2rem;
  margin-bottom: 2rem;
}
@media (min-width: 1024px) {
  .margins__topBottom {
    margin-top: 4rem;
    margin-bottom: 4rem;
  }
}
.margins__top {
  margin-top: 2rem;
  margin-bottom: 0;
}
@media (min-width: 1024px) {
  .margins__top {
    margin-top: 4rem;
  }
}
.margins__bottom {
  margin-top: 0;
  margin-bottom: 2rem;
}
@media (min-width: 1024px) {
  .margins__bottom {
    margin-bottom: 4rem;
  }
}
.margins__none {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}
.margins__inContent {
  margin-top: calc(1rem / 2);
  margin-bottom: 1rem;
}
.margins__double.margins__topBottom {
  margin-top: 4rem;
  margin-bottom: 4rem;
}
@media (min-width: 1024px) {
  .margins__double.margins__topBottom {
    margin-top: 8rem;
    margin-bottom: 8rem;
  }
}
.margins__double.margins__top {
  margin-top: 4rem;
  margin-bottom: 0;
}
@media (min-width: 1024px) {
  .margins__double.margins__top {
    margin-top: 8rem;
  }
}
.margins__double.margins__bottom {
  margin-top: 0;
  margin-bottom: 4rem;
}
@media (min-width: 1024px) {
  .margins__double.margins__bottom {
    margin-bottom: 8rem;
  }
}

.content__narrow {
  width: 80%;
  max-width: 740px;
  margin-left: auto;
  margin-right: auto;
}

h6, h5, h4, h3, h2, h1 {
  font-weight: 700;
  margin-top: calc(1rem / 2);
  margin-bottom: 1rem;
}

h1 {
  font-size: 2.5rem;
  line-height: 1.35;
}
@media (min-width: 1024px) {
  h1 {
    font-size: 3rem;
  }
}

h2 {
  font-size: 2rem;
  line-height: 1.3;
}
@media (min-width: 1024px) {
  h2 {
    font-size: 2.5rem;
  }
}

h3 {
  font-size: 1.5rem;
  line-height: 1.25;
}
@media (min-width: 1024px) {
  h3 {
    font-size: 2rem;
  }
}

h4 {
  font-size: 1.25rem;
  line-height: 1.2;
}
@media (min-width: 1024px) {
  h4 {
    font-size: 1.75rem;
  }
}

h5 {
  font-size: 1.2rem;
  margin-bottom: 0.5rem;
  line-height: 1.2;
}
@media (min-width: 1024px) {
  h5 {
    font-size: 1.5rem;
  }
}

h6 {
  font-size: 1.25rem;
  margin-bottom: 0.5rem;
  line-height: 1.15;
}

p {
  font-size: 1rem;
  margin-top: calc(1rem / 2);
  margin-bottom: 1rem;
}
p.is-style-lead {
  font-size: 1.3rem;
}

.has-text-align-left {
  text-align: left;
}
.has-text-align-center {
  text-align: center;
}
.has-text-align-right {
  text-align: right;
}

strong {
  font-weight: 700;
}

em {
  font-style: italic;
}

a {
  text-decoration: underline;
  text-decoration-color: #333;
  text-underline-offset: 0.2em;
  text-decoration-thickness: 0.1em;
  transition: text-decoration-color 0.15s ease;
  color: #333;
}
a:hover {
  text-decoration-color: rgba(51, 51, 51, 0.25);
}

ol, ul {
  margin-top: calc(1rem / 2);
  margin-bottom: 1rem;
  padding-left: 2rem;
}

ul {
  list-style: none;
}
ul li {
  position: relative;
}
ul li:before {
  content: "";
  display: block;
  position: absolute;
  left: -24px;
  top: 6px;
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background-color: #333;
}

.testing {
  background-color: red;
  color: blue;
}

.alert {
  background-color: #f2f5f6;
  padding: calc(1rem / 2) 1rem;
  position: fixed;
  top: 90px;
  left: 0;
  width: 100%;
  z-index: 100;
}
.alert__container {
  max-width: 1400px;
  margin-left: auto;
  margin-right: auto;
  text-align: center;
}
.alert__container p {
  font-size: 0.875rem;
  margin: 0;
}

.headernavigation {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  padding: 2rem;
  z-index: 100;
  display: flex;
  justify-content: flex-end;
  background-color: #161616;
  height: 90px;
}
.headernavigation__flyout {
  background-color: #161616;
  color: #fff;
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  transition: transform 0.3s;
  transform: translateX(100%);
}
.headernavigation__flyout--container {
  height: 100%;
  padding: 5rem 1rem;
  width: 100%;
  max-width: 1400px;
  margin-left: auto;
  margin-right: auto;
}
.headernavigation__flyout--container ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
.headernavigation__flyout--container ul li a {
  color: #fff;
  text-decoration: none;
}
.headernavigation__flyout--container ul ul li {
  padding-left: 1rem;
}
.headernavigation__button--container {
  position: relative;
  z-index: 1;
}
.headernavigation__open .headernavigation__flyout {
  transform: translateX(0);
}

div.bannerimage {
  max-width: 100%;
  padding: 0;
  content-visibility: auto;
  contain-intrinsic-size: 600px;
}
div.bannerimage__media {
  position: relative;
}
div.bannerimage__media:before {
  display: block;
  content: "";
  width: 100%;
  padding-top: calc((7 / 16) * 100%);
}
div.bannerimage__media img {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}
div.bannerimage__media img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

div.panel {
  padding-top: 2rem;
  padding-bottom: 2rem;
}
@media (min-width: 1024px) {
  div.panel {
    padding-top: 4rem;
    padding-bottom: 4rem;
  }
}

.callout {
  content-visibility: auto;
  contain-intrinsic-size: 800px;
}
.callout__container {
  max-width: 900px;
  margin-right: auto;
  margin-left: auto;
}
.callout__media {
  position: relative;
}
.callout__media:before {
  display: block;
  content: "";
  width: 100%;
  padding-top: 75%;
}
.callout__media img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}
.callout__content {
  padding-top: 1rem;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 1rem;
}
.callout__content > *:first-child {
  margin-top: 0;
}
.callout__content > *:last-child {
  margin-bottom: 0;
}
.callout__item {
  flex: 0 1 calc(33.333% - 11px);
}
.callout__item--content {
  font-size: 0.875rem;
}
@media (min-width: 1024px) {
  .callout__item--content {
    font-size: 1rem;
  }
}

.cardgroup {
  content-visibility: auto;
  contain-intrinsic-size: 800px;
  background-color: #000;
  position: relative;
  padding-top: 2rem;
  padding-bottom: 2rem;
}
@media (min-width: 1600px) {
  .cardgroup {
    padding-top: 6rem;
    padding-bottom: 6rem;
  }
}
.cardgroup__container {
  position: relative;
  z-index: 2;
  width: 100%;
  max-width: 1400px;
  margin: 0 auto;
  gap: 1rem;
}
.cardgroup__container--title {
  position: relative;
  z-index: 2;
  text-align: center;
  width: 100%;
  max-width: 800px;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 2rem;
}
.cardgroup__container--title > * {
  color: #fff;
}
.cardgroup__container--title > *:first-child {
  margin-top: 0;
}
.cardgroup__container--title > *:last-child {
  margin-bottom: 0;
}
.cardgroup__container--content {
  display: flex;
  flex-wrap: wrap;
  border-top: 1px solid #fff;
  padding-top: 2rem;
}
.cardgroup__container--media {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
}
.cardgroup__container--media > picture > img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

.cardgroupitem {
  flex: 1 1 calc(50% - 1rem);
}
@media (min-width: 992px) {
  .cardgroupitem {
    flex: 1 1 calc(25% - 1rem);
  }
}
.cardgroupitem__title, .cardgroupitem__content {
  color: #fff;
}
.cardgroupitem__title {
  font-size: 1.5rem;
}
.cardgroupitem__content {
  font-size: 1rem;
}

.columns {
  content-visibility: auto;
  contain-intrinsic-size: 500px;
}
.columns .columns__container {
  gap: 1rem 1rem;
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
  width: 100%;
}
@media (min-width: 600px) {
  .columns .columns__container {
    flex-direction: row;
  }
}
.columns .columns__container .column {
  width: 100%;
}
.columns .columns__container .column > *:first-child {
  margin-top: 0;
}
.columns .columns__container .column > *:last-child {
  margin-bottom: 0;
}
@media (max-width: calc(600px - 1)) {
  .columns.columns__reverse .columns__container {
    flex-direction: column-reverse;
  }
}
@media (min-width: 600px) {
  .columns.columns__count--2 .columns__container .column {
    width: calc(50% - (1rem / 2));
  }
}
@media (min-width: 600px) {
  .columns.columns__count--2.columns__offset--6040 .columns__container .column:nth-child(odd) {
    width: calc(60% - (1rem / 2));
  }
  .columns.columns__count--2.columns__offset--6040 .columns__container .column:nth-child(even) {
    width: calc(40% - (1rem / 2));
  }
}
@media (min-width: 600px) {
  .columns.columns__count--2.columns__offset--4060 .columns__container .column:nth-child(odd) {
    width: calc(40% - (1rem / 2));
  }
  .columns.columns__count--2.columns__offset--4060 .columns__container .column:nth-child(even) {
    width: calc(60% - (1rem / 2));
  }
}
@media (min-width: 600px) {
  .columns.columns__count--3 .columns__container .column {
    width: calc(33.333% - 14px);
  }
}
@media (min-width: 600px) {
  .columns.columns__count--4 .columns__container .column {
    width: calc(25% - 15px);
  }
}

.cta {
  content-visibility: auto;
  contain-intrinsic-size: 500px;
  position: relative;
  background-color: #000;
  padding-top: 2rem;
  padding-bottom: 2rem;
}
.cta.cta__text--left .cta__container {
  justify-content: flex-start;
  text-align: left;
}
.cta.cta__text--right .cta__container {
  justify-content: flex-end;
  text-align: right;
}
.cta.cta__text--center .cta__container {
  justify-content: center;
  text-align: center;
}
.cta__container {
  display: flex;
  flex-direction: row;
  position: relative;
  z-index: 2;
  width: 100%;
  max-width: 1400px;
  margin: 0 auto;
  padding: 4rem 0;
}
@media (min-width: 1600px) {
  .cta__container {
    padding-top: 6rem;
    padding-bottom: 6rem;
  }
}
.cta .cta__container--media {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
}
.cta .cta__container--media img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}
.cta__column {
  flex: 0 0 100%;
}
@media (min-width: 600px) {
  .cta__column {
    flex-basis: 75%;
  }
}
@media (min-width: 1024px) {
  .cta__column {
    flex-basis: 50%;
  }
}
.cta__column > *:first-child {
  margin-top: 0;
}
.cta__column > *:last-child {
  margin-bottom: 0;
}
.cta__column .cta__heading,
.cta__column p {
  color: #fff;
}

section.testimonials {
  max-width: 740px;
}

.testimonials {
  content-visibility: auto;
  contain-intrinsic-size: 500px;
}
.testimonials__item {
  text-align: center;
}
.testimonials__item blockquote {
  margin-top: 0;
  margin-bottom: 1rem;
}
.testimonials__item blockquote > p {
  font-size: 1.75rem;
  font-weight: 700;
  line-height: 1.2;
  margin-top: 0;
  margin-bottom: 0;
}
.testimonials__item figcaption {
  font-size: 1.25rem;
  line-height: 1.15;
}
.testimonials__container {
  margin-bottom: 1rem;
}
.testimonials__pagination {
  padding: 0;
  display: flex;
  gap: calc(1rem / 2);
}
.testimonials__pagination--page {
  height: 25px;
  width: 25px;
}

.panel .testimonials {
  margin-right: auto;
  margin-left: auto;
}

.faq {
  content-visibility: auto;
  contain-intrinsic-size: 500px;
}
.faq__container {
  max-width: 740px;
  margin-left: auto;
  margin-right: auto;
}
.faq__items {
  display: flex;
  flex-direction: column;
  gap: 1rem 0;
}
.faq__question {
  background-color: transparent;
  border: none;
  display: block;
  padding: 1rem;
  padding-right: 54px;
  font-size: 1.25rem;
  font-weight: 700;
  background-color: #f2f5f6;
  width: 100%;
  text-align: left;
  cursor: pointer;
  position: relative;
}
.faq__question:before, .faq__question:after {
  content: "";
  display: block;
  background-color: #161616;
  position: absolute;
}
.faq__question:before {
  height: 24px;
  width: 4px;
  right: 26px;
  top: 1rem;
}
.faq__question:after {
  width: 24px;
  height: 4px;
  right: 1rem;
  top: 26px;
}
.faq__question.faq__open + .faq__answer {
  height: auto;
  padding: 1rem;
}
.faq__question.faq__open:before {
  display: none;
}
.faq__answer {
  display: block;
  height: 0;
  overflow: hidden;
  padding-left: 1rem;
  padding-right: 1rem;
}

.brand1 .faq__item,
.brand2 .faq__item {
  color: #fff;
}
.brand1 .faq__question,
.brand2 .faq__question {
  color: #fff;
}

.brand2 .faq__question {
  color: #161616;
}

.brand4 .faq__question {
  background-color: #333;
  color: #fff;
}
.brand4 .faq__question:before, .brand4 .faq__question:after {
  background-color: #fff;
}

.brand1 .faq__question {
  background-color: #333;
}
.brand1 .faq__question:before, .brand1 .faq__question:after {
  background-color: #fff;
}

.feed {
  content-visibility: auto;
  contain-intrinsic-size: 800px;
}
.feed__container {
  display: flex;
  gap: 1rem;
}

.news__item {
  flex: 1 1 calc(50% - (1rem / 2));
}
.news__item--media {
  position: relative;
}
.news__item--media:before {
  display: block;
  content: "";
  width: 100%;
  padding-top: 75%;
}
.news__item--media img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.fixedspacer {
  content-visibility: auto;
  contain-intrinsic-size: 400px;
  height: 4rem;
}
@media (min-width: 1024px) {
  .fixedspacer {
    height: 8rem;
  }
}

.flexi {
  content-visibility: auto;
  contain-intrinsic-size: 800px;
}
.flexi__hasbgcolor {
  padding-top: 2rem;
  padding-bottom: 2rem;
  width: 100vw !important;
  transform: none !important;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
}
.flexi__hasbgcolor .flexi__container {
  width: 100%;
  margin: 0 auto;
  padding: 4rem 2rem;
}
@media (min-width: 600px) {
  .flexi__hasbgcolor .flexi__container {
    max-width: 600px;
  }
}
@media (min-width: 992px) {
  .flexi__hasbgcolor .flexi__container {
    max-width: 992px;
  }
}
@media (min-width: 1024px) {
  .flexi__hasbgcolor .flexi__container {
    max-width: 1024px;
  }
}
@media (min-width: 1600px) {
  .flexi__hasbgcolor .flexi__container {
    max-width: 1600px;
  }
}
@media (min-width: 1600px) {
  .flexi__hasbgcolor .flexi__container {
    padding-top: 6rem;
    padding-bottom: 6rem;
  }
}
.flexi__hasbgcolor--brand1 {
  background-color: #161616;
  color: #fff;
}
.flexi__hasbgcolor--brand2 {
  background-color: #333;
  color: #fff;
}
.flexi__hasbgcolor--brand3 {
  background-color: #ffffff;
  color: #161616;
}
.flexi__hasbgcolor--brand4 {
  background-color: #f2f5f6;
  color: #161616;
}
@media (min-width: 992px) {
  .flexi.images__left .flexi__container {
    flex-direction: row-reverse;
  }
}
@media (min-width: 992px) {
  .flexi.images__right .flexi__container {
    flex-direction: row;
  }
}
.flexi__container {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
}
.flexi__column {
  flex: 1 0 33.333%;
  max-width: 50%;
  padding: 0 10px;
}
@media (max-width: 991px) {
  .flexi__column:nth-child(1) {
    flex: 0 0 100%;
    max-width: 100%;
  }
}
.flexi__column--media img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

section.hero {
  padding-left: 0;
  padding-right: 0;
  height: 100vh;
  width: 100%;
  max-width: 100%;
}

.hero {
  content-visibility: auto;
  contain-intrinsic-size: 800px;
}
.hero__container--content {
  color: #fff;
  max-width: 1400px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 2rem;
  padding-right: 2rem;
  height: 100%;
  display: flex;
  align-items: center;
}
.hero .hero__slide {
  height: 100%;
  position: relative;
}
.hero .hero__slide--content {
  z-index: 1;
  max-width: 500px;
}
.hero .hero__slide--media {
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}
.hero .hero__slide--media img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}
.hero .hero__track,
.hero .hero__list {
  height: inherit;
}

div.panel {
  padding-top: 2rem;
  padding-bottom: 2rem;
}
@media (min-width: 1024px) {
  div.panel {
    padding-top: 4rem;
    padding-bottom: 4rem;
  }
}

div.panel {
  max-width: 100%;
}
div.panel.brand1 {
  background-color: #161616;
  color: #fff;
}
div.panel.brand2 {
  background-color: #333;
  color: #fff;
}
div.panel.brand3 {
  background-color: #ffffff;
}
div.panel.brand4 {
  background-color: #f2f5f6;
}
div.panel__container {
  max-width: 1400px;
  margin-left: auto;
  margin-right: auto;
}
div.panel__container > *:first-child {
  margin-top: 0;
}
div.panel__container > *:last-child {
  margin-bottom: 0;
}

.partners {
  content-visibility: auto;
  contain-intrinsic-size: 800px;
}
.partners__container {
  display: block;
  margin-left: auto;
  margin-right: auto;
  max-width: 1400px;
}
.partners__items {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  align-items: center;
}
.partners__item {
  width: calc(50% - (1rem / 2));
}
@media (min-width: 600px) {
  .partners__item {
    width: calc(25% - 12px);
  }
}
.partners__item a {
  display: block;
}
.partners__item a:hover {
  cursor: pointer;
}
.partners__item a:hover img {
  opacity: 0.5;
}
.partners__item img {
  display: block;
  width: 100%;
  height: auto;
  transition: opacity 0.3s;
}

.promogroup {
  content-visibility: auto;
  contain-intrinsic-size: 800px;
}
.promogroup__stacked .promogroupitem {
  width: 100%;
}
.promogroup__stacked .promogroupitem .promogroupitem__container {
  display: flex;
}
.promogroup__stacked .promogroupitem .promogroupitem__media {
  flex: 0 0 40%;
}
.promogroup__stacked .promogroupitem .promogroupitem__text {
  flex: 1 1 auto;
  padding-left: 1rem;
}
.promogroup__columns.promogroup__columns--2 .promogroup__container--content .promogroupitem {
  width: calc(50% - (1rem / 2));
}
.promogroup__columns.promogroup__columns--3 .promogroup__container--content .promogroupitem {
  width: calc(50% - (1rem / 2));
}
@media (min-width: 1024px) {
  .promogroup__columns.promogroup__columns--3 .promogroup__container--content .promogroupitem {
    width: calc(33.333% - 11px);
  }
}
.promogroup__columns.promogroup__columns--4 .promogroup__container--content .promogroupitem {
  width: calc(50% - (1rem / 2));
}
@media (min-width: 1024px) {
  .promogroup__columns.promogroup__columns--4 .promogroup__container--content .promogroupitem {
    width: calc(25% - 12px);
  }
}
.promogroup .promogroup__container--content {
  gap: 1rem;
  display: flex;
  flex-wrap: wrap;
}
.promogroup .promogroup__container {
  width: 100%;
  max-width: 1400px;
  margin: 0 auto;
}
.promogroup .promogroupitem {
  background-color: #f2f5f6;
}
.promogroup .promogroupitem .promogroupitem__text {
  padding: 1rem;
}
.promogroup .promogroupitem .promogroupitem__title {
  margin-top: 0.5rem;
  margin-bottom: 1rem;
  font-size: 1.25rem;
}
@media (min-width: 1024px) {
  .promogroup .promogroupitem .promogroupitem__title {
    font-size: 1.5rem;
  }
}
.promogroup .promogroupitem .promogroupitem__content {
  margin-top: 0.5rem;
  margin-bottom: 1rem;
  font-size: 1rem;
}

.promogroupitem__media img {
  aspect-ratio: 4/3;
  object-fit: cover;
  object-position: center;
  width: 100%;
  height: auto;
}

figure.quote {
  content-visibility: auto;
  contain-intrinsic-size: 800px;
  max-width: 740px;
  text-align: center;
}
figure.quote blockquote {
  margin-top: 0;
  margin-bottom: 1rem;
}
figure.quote blockquote > p {
  font-size: 1.75rem;
  font-weight: 700;
  line-height: 1.2;
  margin-top: 0;
  margin-bottom: 0;
}
figure.quote figcaption {
  font-size: 1.25rem;
  line-height: 1.15;
}

.panel .quote {
  margin-right: auto;
  margin-left: auto;
}

hr.separator {
  content-visibility: auto;
  contain-intrinsic-size: 100px;
  max-width: 740px;
  height: 2px;
  border: none;
  background-color: #333;
  box-sizing: border-box;
}

.panel.brand1 hr.separator {
  background-color: #f2f5f6;
}
.panel.brand2 hr.separator {
  background-color: #161616;
}

.sitesearch {
  content-visibility: auto;
  contain-intrinsic-size: 400px;
}
.sitesearch__container {
  width: 100%;
  max-width: 740px;
  margin-left: auto;
  margin-right: auto;
}
.sitesearch__container form {
  width: 100%;
  border: 1px solid #333;
}
@media (min-width: 1024px) {
  .sitesearch__container form {
    display: flex;
  }
}
.sitesearch__container input {
  padding: 0 1rem;
  height: 60px;
}
.sitesearch__field {
  border: none;
  width: 100%;
}
@media (min-width: 1024px) {
  .sitesearch__field {
    flex-grow: 1;
    width: calc(100% - 175px);
  }
}
.sitesearch__submit {
  width: 100%;
  border: none;
  cursor: pointer;
}
@media (min-width: 1024px) {
  .sitesearch__submit {
    width: 175px;
  }
}

.postlist {
  padding-top: 4rem;
}
.postlist__items {
  display: flex;
  gap: 1rem;
  flex-direction: column;
}
@media (min-width: 1024px) {
  .postlist__items {
    flex-direction: row;
    flex-wrap: wrap;
  }
}

.filters {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.postcard {
  flex: 0 1 100%;
}
@media (min-width: 600px) {
  .postcard {
    flex-basis: calc(50% - (1rem / 2));
  }
}
.postcard__media {
  position: relative;
  margin-bottom: 1rem;
}
.postcard__media:before {
  display: block;
  content: "";
  width: 100%;
  padding-top: calc((3 / 5) * 100%);
}
.postcard__media img {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}
.postcard__media img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}
.postcard__content > *:first-child {
  margin-top: 0;
}
.postcard__content > *:last-child {
  margin-bottom: 0;
}

.footer {
  background-color: #161616;
  padding: 1rem;
  color: #fff;
}
.footer__container {
  max-width: 1400px;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
}
@media (min-width: 1024px) {
  .footer__container {
    flex-direction: row;
  }
}
.footer__container > * {
  flex: 1 1 0;
}

.footernavigation ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
.footernavigation ul li a {
  color: #fff;
  text-decoration: none;
}

.socialmedia ul {
  padding: 0;
  margin: 0;
  list-style: none;
}
.socialmedia ul li a {
  color: #fff;
  text-decoration: none;
}

.contactmethods ul {
  padding: 0;
  margin: 0;
  list-style: none;
}
.contactmethods ul li a {
  color: #fff;
  text-decoration: none;
}
.contactmethods address {
  font-style: normal;
  display: flex;
  flex-direction: column;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/