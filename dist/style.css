/*!*********************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./sass/main.scss ***!
  \*********************************************************************************************************/
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

:root {
  font-size: 16px;
}

* {
  box-sizing: border-box;
}

body {
  font-family: "Poppins", sans-serif;
  line-height: 1.5;
  padding-top: 5rem;
}

.container__main > * {
  padding-left: 2rem;
  padding-right: 2rem;
  max-width: 1400px;
  margin-left: auto;
  margin-right: auto;
  box-sizing: content-box;
}
.container__main .container__full {
  max-width: 100%;
}

.margins__topBottom {
  margin-top: 2rem;
  margin-bottom: 2rem;
}
@media (min-width: 1024px) {
  .margins__topBottom {
    margin-top: 4rem;
    margin-bottom: 4rem;
  }
}
.margins__top {
  margin-top: 2rem;
  margin-bottom: 0;
}
@media (min-width: 1024px) {
  .margins__top {
    margin-top: 4rem;
  }
}
.margins__bottom {
  margin-top: 0;
  margin-bottom: 2rem;
}
@media (min-width: 1024px) {
  .margins__bottom {
    margin-bottom: 4rem;
  }
}
.margins__none {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}
.margins__inContent {
  margin-top: calc(1rem / 2);
  margin-bottom: 1rem;
}
.margins__double.margins__topBottom {
  margin-top: 4rem;
  margin-bottom: 4rem;
}
@media (min-width: 1024px) {
  .margins__double.margins__topBottom {
    margin-top: 8rem;
    margin-bottom: 8rem;
  }
}
.margins__double.margins__top {
  margin-top: 4rem;
  margin-bottom: 0;
}
@media (min-width: 1024px) {
  .margins__double.margins__top {
    margin-top: 8rem;
  }
}
.margins__double.margins__bottom {
  margin-top: 0;
  margin-bottom: 4rem;
}
@media (min-width: 1024px) {
  .margins__double.margins__bottom {
    margin-bottom: 8rem;
  }
}

.content__narrow {
  width: 80%;
  max-width: 740px;
  margin-left: auto;
  margin-right: auto;
}

h6, h5, h4, h3, h2, h1 {
  font-weight: 700;
  margin-top: calc(1rem / 2);
  margin-bottom: 1rem;
}

h1 {
  font-size: 2.5rem;
  line-height: 1.35;
}
@media (min-width: 1024px) {
  h1 {
    font-size: 3rem;
  }
}

h2 {
  font-size: 2rem;
  line-height: 1.3;
}
@media (min-width: 1024px) {
  h2 {
    font-size: 2.5rem;
  }
}

h3 {
  font-size: 1.5rem;
  line-height: 1.25;
}
@media (min-width: 1024px) {
  h3 {
    font-size: 2rem;
  }
}

h4 {
  font-size: 1.25rem;
  line-height: 1.2;
}
@media (min-width: 1024px) {
  h4 {
    font-size: 1.75rem;
  }
}

h5 {
  font-size: 1.2rem;
  margin-bottom: 0.5rem;
  line-height: 1.2;
}
@media (min-width: 1024px) {
  h5 {
    font-size: 1.5rem;
  }
}

h6 {
  font-size: 1.25rem;
  margin-bottom: 0.5rem;
  line-height: 1.15;
}

p {
  font-size: 1rem;
  margin-top: calc(1rem / 2);
  margin-bottom: 1rem;
}
p.is-style-lead {
  font-size: 1.3rem;
}

.has-text-align-left {
  text-align: left;
}
.has-text-align-center {
  text-align: center;
}
.has-text-align-right {
  text-align: right;
}

strong {
  font-weight: 700;
}

em {
  font-style: italic;
}

a {
  text-decoration: underline;
  text-decoration-color: #333;
  text-underline-offset: 0.2em;
  text-decoration-thickness: 0.1em;
  transition: text-decoration-color 0.15s ease;
  color: #333;
}
a:hover {
  text-decoration-color: rgba(51, 51, 51, 0.25);
}

ol, ul {
  margin-top: calc(1rem / 2);
  margin-bottom: 1rem;
  padding-left: 2rem;
}

ul {
  list-style: none;
}
ul li {
  position: relative;
}
ul li:before {
  content: "";
  display: block;
  position: absolute;
  left: -24px;
  top: 6px;
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background-color: #333;
}

.testing {
  background-color: red;
  color: blue;
}

.alert {
  background-color: #f2f5f6;
  padding: calc(1rem / 2) 1rem;
  position: fixed;
  top: 90px;
  left: 0;
  width: 100%;
  z-index: 100;
}
.alert__container {
  max-width: 1400px;
  margin-left: auto;
  margin-right: auto;
  text-align: center;
}
.alert__container p {
  font-size: 0.875rem;
  margin: 0;
}

.headernavigation {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  padding: 2rem;
  z-index: 100;
  display: flex;
  justify-content: flex-end;
  background-color: #161616;
  height: 90px;
}
.headernavigation__flyout {
  background-color: #161616;
  color: #fff;
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  transition: transform 0.3s;
  transform: translateX(100%);
}
.headernavigation__flyout--container {
  height: 100%;
  padding: 5rem 1rem;
  width: 100%;
  max-width: 1400px;
  margin-left: auto;
  margin-right: auto;
}
.headernavigation__flyout--container ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
.headernavigation__flyout--container ul li a {
  color: #fff;
  text-decoration: none;
}
.headernavigation__flyout--container ul ul li {
  padding-left: 1rem;
}
.headernavigation__button--container {
  position: relative;
  z-index: 1;
}
.headernavigation__open .headernavigation__flyout {
  transform: translateX(0);
}

div.bannerimage {
  max-width: 100%;
  padding: 0;
  content-visibility: auto;
  contain-intrinsic-size: 600px;
}
div.bannerimage__media {
  position: relative;
}
div.bannerimage__media:before {
  display: block;
  content: "";
  width: 100%;
  padding-top: calc((7 / 16) * 100%);
}
div.bannerimage__media img {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}
div.bannerimage__media img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

div.panel {
  padding-top: 2rem;
  padding-bottom: 2rem;
}
@media (min-width: 1024px) {
  div.panel {
    padding-top: 4rem;
    padding-bottom: 4rem;
  }
}

.callout {
  content-visibility: auto;
  contain-intrinsic-size: 800px;
}
.callout__container {
  max-width: 900px;
  margin-right: auto;
  margin-left: auto;
}
.callout__media {
  position: relative;
}
.callout__media:before {
  display: block;
  content: "";
  width: 100%;
  padding-top: 75%;
}
.callout__media img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}
.callout__content {
  padding-top: 1rem;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 1rem;
}
.callout__content > *:first-child {
  margin-top: 0;
}
.callout__content > *:last-child {
  margin-bottom: 0;
}
.callout__item {
  flex: 0 1 calc(33.333% - 11px);
}
.callout__item--content {
  font-size: 0.875rem;
}
@media (min-width: 1024px) {
  .callout__item--content {
    font-size: 1rem;
  }
}

.cardgroup {
  content-visibility: auto;
  contain-intrinsic-size: 800px;
  background-color: #000;
  position: relative;
  padding-top: 2rem;
  padding-bottom: 2rem;
}
@media (min-width: 1600px) {
  .cardgroup {
    padding-top: 6rem;
    padding-bottom: 6rem;
  }
}
.cardgroup__container {
  position: relative;
  z-index: 2;
  width: 100%;
  max-width: 1400px;
  margin: 0 auto;
  gap: 1rem;
}
.cardgroup__container--title {
  position: relative;
  z-index: 2;
  text-align: center;
  width: 100%;
  max-width: 800px;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 2rem;
}
.cardgroup__container--title > * {
  color: #fff;
}
.cardgroup__container--title > *:first-child {
  margin-top: 0;
}
.cardgroup__container--title > *:last-child {
  margin-bottom: 0;
}
.cardgroup__container--content {
  display: flex;
  flex-wrap: wrap;
  border-top: 1px solid #fff;
  padding-top: 2rem;
}
.cardgroup__container--media {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
}
.cardgroup__container--media > picture > img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

.cardgroupitem {
  flex: 1 1 calc(50% - 1rem);
}
@media (min-width: 992px) {
  .cardgroupitem {
    flex: 1 1 calc(25% - 1rem);
  }
}
.cardgroupitem__title, .cardgroupitem__content {
  color: #fff;
}
.cardgroupitem__title {
  font-size: 1.5rem;
}
.cardgroupitem__content {
  font-size: 1rem;
}

.columns {
  content-visibility: auto;
  contain-intrinsic-size: 500px;
}
.columns .columns__container {
  gap: 1rem 1rem;
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
  width: 100%;
}
@media (min-width: 600px) {
  .columns .columns__container {
    flex-direction: row;
  }
}
.columns .columns__container .column {
  width: 100%;
}
.columns .columns__container .column > *:first-child {
  margin-top: 0;
}
.columns .columns__container .column > *:last-child {
  margin-bottom: 0;
}
@media (max-width: calc(600px - 1)) {
  .columns.columns__reverse .columns__container {
    flex-direction: column-reverse;
  }
}
@media (min-width: 600px) {
  .columns.columns__count--2 .columns__container .column {
    width: calc(50% - (1rem / 2));
  }
}
@media (min-width: 600px) {
  .columns.columns__count--2.columns__offset--6040 .columns__container .column:nth-child(odd) {
    width: calc(60% - (1rem / 2));
  }
  .columns.columns__count--2.columns__offset--6040 .columns__container .column:nth-child(even) {
    width: calc(40% - (1rem / 2));
  }
}
@media (min-width: 600px) {
  .columns.columns__count--2.columns__offset--4060 .columns__container .column:nth-child(odd) {
    width: calc(40% - (1rem / 2));
  }
  .columns.columns__count--2.columns__offset--4060 .columns__container .column:nth-child(even) {
    width: calc(60% - (1rem / 2));
  }
}
@media (min-width: 600px) {
  .columns.columns__count--3 .columns__container .column {
    width: calc(33.333% - 14px);
  }
}
@media (min-width: 600px) {
  .columns.columns__count--4 .columns__container .column {
    width: calc(25% - 15px);
  }
}

.cta {
  content-visibility: auto;
  contain-intrinsic-size: 500px;
  position: relative;
  background-color: #000;
  padding-top: 2rem;
  padding-bottom: 2rem;
}
.cta.cta__text--left .cta__container {
  justify-content: flex-start;
  text-align: left;
}
.cta.cta__text--right .cta__container {
  justify-content: flex-end;
  text-align: right;
}
.cta.cta__text--center .cta__container {
  justify-content: center;
  text-align: center;
}
.cta__container {
  display: flex;
  flex-direction: row;
  position: relative;
  z-index: 2;
  width: 100%;
  max-width: 1400px;
  margin: 0 auto;
  padding: 4rem 0;
}
@media (min-width: 1600px) {
  .cta__container {
    padding-top: 6rem;
    padding-bottom: 6rem;
  }
}
.cta .cta__container--media {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
}
.cta .cta__container--media img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}
.cta__column {
  flex: 0 0 100%;
}
@media (min-width: 600px) {
  .cta__column {
    flex-basis: 75%;
  }
}
@media (min-width: 1024px) {
  .cta__column {
    flex-basis: 50%;
  }
}
.cta__column > *:first-child {
  margin-top: 0;
}
.cta__column > *:last-child {
  margin-bottom: 0;
}
.cta__column .cta__heading,
.cta__column p {
  color: #fff;
}

section.testimonials {
  max-width: 740px;
}

.testimonials {
  content-visibility: auto;
  contain-intrinsic-size: 500px;
}
.testimonials__item {
  text-align: center;
}
.testimonials__item blockquote {
  margin-top: 0;
  margin-bottom: 1rem;
}
.testimonials__item blockquote > p {
  font-size: 1.75rem;
  font-weight: 700;
  line-height: 1.2;
  margin-top: 0;
  margin-bottom: 0;
}
.testimonials__item figcaption {
  font-size: 1.25rem;
  line-height: 1.15;
}
.testimonials__container {
  margin-bottom: 1rem;
}
.testimonials__pagination {
  padding: 0;
  display: flex;
  gap: calc(1rem / 2);
}
.testimonials__pagination--page {
  height: 25px;
  width: 25px;
}

.panel .testimonials {
  margin-right: auto;
  margin-left: auto;
}

.faq {
  content-visibility: auto;
  contain-intrinsic-size: 500px;
}
.faq__container {
  max-width: 740px;
  margin-left: auto;
  margin-right: auto;
}
.faq__items {
  display: flex;
  flex-direction: column;
  gap: 1rem 0;
}
.faq__question {
  background-color: transparent;
  border: none;
  display: block;
  padding: 1rem;
  padding-right: 54px;
  font-size: 1.25rem;
  font-weight: 700;
  background-color: #f2f5f6;
  width: 100%;
  text-align: left;
  cursor: pointer;
  position: relative;
}
.faq__question:before, .faq__question:after {
  content: "";
  display: block;
  background-color: #161616;
  position: absolute;
}
.faq__question:before {
  height: 24px;
  width: 4px;
  right: 26px;
  top: 1rem;
}
.faq__question:after {
  width: 24px;
  height: 4px;
  right: 1rem;
  top: 26px;
}
.faq__question.faq__open + .faq__answer {
  height: auto;
  padding: 1rem;
}
.faq__question.faq__open:before {
  display: none;
}
.faq__answer {
  display: block;
  height: 0;
  overflow: hidden;
  padding-left: 1rem;
  padding-right: 1rem;
}

.brand1 .faq__item,
.brand2 .faq__item {
  color: #fff;
}
.brand1 .faq__question,
.brand2 .faq__question {
  color: #fff;
}

.brand2 .faq__question {
  color: #161616;
}

.brand4 .faq__question {
  background-color: #333;
  color: #fff;
}
.brand4 .faq__question:before, .brand4 .faq__question:after {
  background-color: #fff;
}

.brand1 .faq__question {
  background-color: #333;
}
.brand1 .faq__question:before, .brand1 .faq__question:after {
  background-color: #fff;
}

.feed {
  content-visibility: auto;
  contain-intrinsic-size: 800px;
}
.feed__container {
  display: flex;
  gap: 1rem;
}

.news__item {
  flex: 1 1 calc(50% - (1rem / 2));
}
.news__item--media {
  position: relative;
}
.news__item--media:before {
  display: block;
  content: "";
  width: 100%;
  padding-top: 75%;
}
.news__item--media img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.fixedspacer {
  content-visibility: auto;
  contain-intrinsic-size: 400px;
  height: 4rem;
}
@media (min-width: 1024px) {
  .fixedspacer {
    height: 8rem;
  }
}

.flexi {
  content-visibility: auto;
  contain-intrinsic-size: 800px;
}
.flexi__hasbgcolor {
  padding-top: 2rem;
  padding-bottom: 2rem;
  width: 100vw !important;
  transform: none !important;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
}
.flexi__hasbgcolor .flexi__container {
  width: 100%;
  margin: 0 auto;
  padding: 4rem 2rem;
}
@media (min-width: 600px) {
  .flexi__hasbgcolor .flexi__container {
    max-width: 600px;
  }
}
@media (min-width: 992px) {
  .flexi__hasbgcolor .flexi__container {
    max-width: 992px;
  }
}
@media (min-width: 1024px) {
  .flexi__hasbgcolor .flexi__container {
    max-width: 1024px;
  }
}
@media (min-width: 1600px) {
  .flexi__hasbgcolor .flexi__container {
    max-width: 1600px;
  }
}
@media (min-width: 1600px) {
  .flexi__hasbgcolor .flexi__container {
    padding-top: 6rem;
    padding-bottom: 6rem;
  }
}
.flexi__hasbgcolor--brand1 {
  background-color: #161616;
  color: #fff;
}
.flexi__hasbgcolor--brand2 {
  background-color: #333;
  color: #fff;
}
.flexi__hasbgcolor--brand3 {
  background-color: #ffffff;
  color: #161616;
}
.flexi__hasbgcolor--brand4 {
  background-color: #f2f5f6;
  color: #161616;
}
@media (min-width: 992px) {
  .flexi.images__left .flexi__container {
    flex-direction: row-reverse;
  }
}
@media (min-width: 992px) {
  .flexi.images__right .flexi__container {
    flex-direction: row;
  }
}
.flexi__container {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
}
.flexi__column {
  flex: 1 0 33.333%;
  max-width: 50%;
  padding: 0 10px;
}
@media (max-width: 991px) {
  .flexi__column:nth-child(1) {
    flex: 0 0 100%;
    max-width: 100%;
  }
}
.flexi__column--media img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

section.hero {
  padding-left: 0;
  padding-right: 0;
  height: 100vh;
  width: 100%;
  max-width: 100%;
}

.hero {
  content-visibility: auto;
  contain-intrinsic-size: 800px;
}
.hero__container--content {
  color: #fff;
  max-width: 1400px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 2rem;
  padding-right: 2rem;
  height: 100%;
  display: flex;
  align-items: center;
}
.hero .hero__slide {
  height: 100%;
  position: relative;
}
.hero .hero__slide--content {
  z-index: 1;
  max-width: 500px;
}
.hero .hero__slide--media {
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}
.hero .hero__slide--media img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}
.hero .hero__track,
.hero .hero__list {
  height: inherit;
}

div.panel {
  padding-top: 2rem;
  padding-bottom: 2rem;
}
@media (min-width: 1024px) {
  div.panel {
    padding-top: 4rem;
    padding-bottom: 4rem;
  }
}

div.panel {
  max-width: 100%;
}
div.panel.brand1 {
  background-color: #161616;
  color: #fff;
}
div.panel.brand2 {
  background-color: #333;
  color: #fff;
}
div.panel.brand3 {
  background-color: #ffffff;
}
div.panel.brand4 {
  background-color: #f2f5f6;
}
div.panel__container {
  max-width: 1400px;
  margin-left: auto;
  margin-right: auto;
}
div.panel__container > *:first-child {
  margin-top: 0;
}
div.panel__container > *:last-child {
  margin-bottom: 0;
}

.partners {
  content-visibility: auto;
  contain-intrinsic-size: 800px;
}
.partners__container {
  display: block;
  margin-left: auto;
  margin-right: auto;
  max-width: 1400px;
}
.partners__items {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  align-items: center;
}
.partners__item {
  width: calc(50% - (1rem / 2));
}
@media (min-width: 600px) {
  .partners__item {
    width: calc(25% - 12px);
  }
}
.partners__item a {
  display: block;
}
.partners__item a:hover {
  cursor: pointer;
}
.partners__item a:hover img {
  opacity: 0.5;
}
.partners__item img {
  display: block;
  width: 100%;
  height: auto;
  transition: opacity 0.3s;
}

.promogroup {
  content-visibility: auto;
  contain-intrinsic-size: 800px;
}
.promogroup__stacked .promogroupitem {
  width: 100%;
}
.promogroup__stacked .promogroupitem .promogroupitem__container {
  display: flex;
}
.promogroup__stacked .promogroupitem .promogroupitem__media {
  flex: 0 0 40%;
}
.promogroup__stacked .promogroupitem .promogroupitem__text {
  flex: 1 1 auto;
  padding-left: 1rem;
}
.promogroup__columns.promogroup__columns--2 .promogroup__container--content .promogroupitem {
  width: calc(50% - (1rem / 2));
}
.promogroup__columns.promogroup__columns--3 .promogroup__container--content .promogroupitem {
  width: calc(50% - (1rem / 2));
}
@media (min-width: 1024px) {
  .promogroup__columns.promogroup__columns--3 .promogroup__container--content .promogroupitem {
    width: calc(33.333% - 11px);
  }
}
.promogroup__columns.promogroup__columns--4 .promogroup__container--content .promogroupitem {
  width: calc(50% - (1rem / 2));
}
@media (min-width: 1024px) {
  .promogroup__columns.promogroup__columns--4 .promogroup__container--content .promogroupitem {
    width: calc(25% - 12px);
  }
}
.promogroup .promogroup__container--content {
  gap: 1rem;
  display: flex;
  flex-wrap: wrap;
}
.promogroup .promogroup__container {
  width: 100%;
  max-width: 1400px;
  margin: 0 auto;
}
.promogroup .promogroupitem {
  background-color: #f2f5f6;
}
.promogroup .promogroupitem .promogroupitem__text {
  padding: 1rem;
}
.promogroup .promogroupitem .promogroupitem__title {
  margin-top: 0.5rem;
  margin-bottom: 1rem;
  font-size: 1.25rem;
}
@media (min-width: 1024px) {
  .promogroup .promogroupitem .promogroupitem__title {
    font-size: 1.5rem;
  }
}
.promogroup .promogroupitem .promogroupitem__content {
  margin-top: 0.5rem;
  margin-bottom: 1rem;
  font-size: 1rem;
}

.promogroupitem__media img {
  aspect-ratio: 4/3;
  object-fit: cover;
  object-position: center;
  width: 100%;
  height: auto;
}

figure.quote {
  content-visibility: auto;
  contain-intrinsic-size: 800px;
  max-width: 740px;
  text-align: center;
}
figure.quote blockquote {
  margin-top: 0;
  margin-bottom: 1rem;
}
figure.quote blockquote > p {
  font-size: 1.75rem;
  font-weight: 700;
  line-height: 1.2;
  margin-top: 0;
  margin-bottom: 0;
}
figure.quote figcaption {
  font-size: 1.25rem;
  line-height: 1.15;
}

.panel .quote {
  margin-right: auto;
  margin-left: auto;
}

hr.separator {
  content-visibility: auto;
  contain-intrinsic-size: 100px;
  max-width: 740px;
  height: 2px;
  border: none;
  background-color: #333;
  box-sizing: border-box;
}

.panel.brand1 hr.separator {
  background-color: #f2f5f6;
}
.panel.brand2 hr.separator {
  background-color: #161616;
}

.sitesearch {
  content-visibility: auto;
  contain-intrinsic-size: 400px;
}
.sitesearch__container {
  width: 100%;
  max-width: 740px;
  margin-left: auto;
  margin-right: auto;
}
.sitesearch__container form {
  width: 100%;
  border: 1px solid #333;
}
@media (min-width: 1024px) {
  .sitesearch__container form {
    display: flex;
  }
}
.sitesearch__container input {
  padding: 0 1rem;
  height: 60px;
}
.sitesearch__field {
  border: none;
  width: 100%;
}
@media (min-width: 1024px) {
  .sitesearch__field {
    flex-grow: 1;
    width: calc(100% - 175px);
  }
}
.sitesearch__submit {
  width: 100%;
  border: none;
  cursor: pointer;
}
@media (min-width: 1024px) {
  .sitesearch__submit {
    width: 175px;
  }
}

.postlist {
  padding-top: 4rem;
}
.postlist__items {
  display: flex;
  gap: 1rem;
  flex-direction: column;
}
@media (min-width: 1024px) {
  .postlist__items {
    flex-direction: row;
    flex-wrap: wrap;
  }
}

.filters {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.postcard {
  flex: 0 1 100%;
}
@media (min-width: 600px) {
  .postcard {
    flex-basis: calc(50% - (1rem / 2));
  }
}
.postcard__media {
  position: relative;
  margin-bottom: 1rem;
}
.postcard__media:before {
  display: block;
  content: "";
  width: 100%;
  padding-top: calc((3 / 5) * 100%);
}
.postcard__media img {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}
.postcard__media img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}
.postcard__content > *:first-child {
  margin-top: 0;
}
.postcard__content > *:last-child {
  margin-bottom: 0;
}

.footer {
  background-color: #161616;
  padding: 1rem;
  color: #fff;
}
.footer__container {
  max-width: 1400px;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
}
@media (min-width: 1024px) {
  .footer__container {
    flex-direction: row;
  }
}
.footer__container > * {
  flex: 1 1 0;
}

.footernavigation ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
.footernavigation ul li a {
  color: #fff;
  text-decoration: none;
}

.socialmedia ul {
  padding: 0;
  margin: 0;
  list-style: none;
}
.socialmedia ul li a {
  color: #fff;
  text-decoration: none;
}

.contactmethods ul {
  padding: 0;
  margin: 0;
  list-style: none;
}
.contactmethods ul li a {
  color: #fff;
  text-decoration: none;
}
.contactmethods address {
  font-style: normal;
  display: flex;
  flex-direction: column;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGUuY3NzIiwibWFwcGluZ3MiOiI7OztBQUFBO0FBRUE7K0VBQUE7QUFHQTs7O0VBQUE7QUFLQTtFQUNFO0VBQ0E7QUNGRjs7QURLQTsrRUFBQTtBQUdBOztFQUFBO0FBSUE7RUFDRTtBQ0pGOztBRE9BOztFQUFBO0FBSUE7RUFDRTtBQ0xGOztBRFFBOzs7RUFBQTtBQUtBO0VBQ0U7RUFDQTtBQ05GOztBRFNBOytFQUFBO0FBR0E7OztFQUFBO0FBS0E7RUFDRTtFQUNBO0VBQ0E7QUNSRjs7QURXQTs7O0VBQUE7QUFLQTtFQUNFO0VBQ0E7QUNURjs7QURZQTsrRUFBQTtBQUdBOztFQUFBO0FBSUE7RUFDRTtBQ1hGOztBRGNBOzs7RUFBQTtBQUtBO0VBQ0U7RUFDQTtFQUNBO0FDWkY7O0FEZUE7O0VBQUE7QUFJQTs7RUFFRTtBQ2JGOztBRGdCQTs7O0VBQUE7QUFLQTs7O0VBR0U7RUFDQTtBQ2RGOztBRGlCQTs7RUFBQTtBQUlBO0VBQ0U7QUNmRjs7QURrQkE7OztFQUFBO0FBS0E7O0VBRUU7RUFDQTtFQUNBO0VBQ0E7QUNoQkY7O0FEbUJBO0VBQ0U7QUNoQkY7O0FEbUJBO0VBQ0U7QUNoQkY7O0FEbUJBOytFQUFBO0FBR0E7O0VBQUE7QUFJQTtFQUNFO0FDbEJGOztBRHFCQTsrRUFBQTtBQUdBOzs7RUFBQTtBQUtBOzs7OztFQUtFO0VBQ0E7RUFDQTtFQUNBO0FDcEJGOztBRHVCQTs7O0VBQUE7QUFLQTtRQUNRO0VBQ047QUNyQkY7O0FEd0JBOzs7RUFBQTtBQUtBO1NBQ1M7RUFDUDtBQ3RCRjs7QUR5QkE7O0VBQUE7QUFJQTs7OztFQUlFO0FDdkJGOztBRDBCQTs7RUFBQTtBQUlBOzs7O0VBSUU7RUFDQTtBQ3hCRjs7QUQyQkE7O0VBQUE7QUFJQTs7OztFQUlFO0FDekJGOztBRDRCQTs7RUFBQTtBQUlBO0VBQ0U7QUMxQkY7O0FENkJBOzs7OztFQUFBO0FBT0E7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUMzQkY7O0FEOEJBOztFQUFBO0FBSUE7RUFDRTtBQzVCRjs7QUQrQkE7O0VBQUE7QUFJQTtFQUNFO0FDN0JGOztBRGdDQTs7O0VBQUE7QUFLQTs7RUFFRTtFQUNBO0FDOUJGOztBRGlDQTs7RUFBQTtBQUlBOztFQUVFO0FDL0JGOztBRGtDQTs7O0VBQUE7QUFLQTtFQUNFO0VBQ0E7QUNoQ0Y7O0FEbUNBOztFQUFBO0FBSUE7RUFDRTtBQ2pDRjs7QURvQ0E7OztFQUFBO0FBS0E7RUFDRTtFQUNBO0FDbENGOztBRHFDQTsrRUFBQTtBQUdBOztFQUFBO0FBSUE7RUFDRTtBQ3BDRjs7QUR1Q0E7O0VBQUE7QUFJQTtFQUNFO0FDckNGOztBRHdDQTsrRUFBQTtBQUdBOztFQUFBO0FBSUE7RUFDRTtBQ3ZDRjs7QUQwQ0E7O0VBQUE7QUFJQTtFQUNFO0FDeENGOztBQ25UQTtFQUNJO0FEc1RKOztBQ25UQTtFQUNJO0FEc1RKOztBQ25UQTtFQUNJLGtDQ1BRO0VEUVI7RUFDQTtBRHNUSjs7QUNqVFE7RUFDSTtFQUNBO0VBQ0EsaUJDYUE7RURaQTtFQUNBO0VBQ0E7QURvVFo7QUNqVFE7RUFDSTtBRG1UWjs7QUM3U0k7RUFDSTtFQUNBO0FEZ1RSO0FHalVJO0VGZUE7SUFLUTtJQUNBO0VEaVRWO0FBQ0Y7QUM5U0k7RUFDSTtFQUNBO0FEZ1RSO0FHM1VJO0VGeUJBO0lBS1E7RURpVFY7QUFDRjtBQzlTSTtFQUNJO0VBQ0E7QURnVFI7QUdwVkk7RUZrQ0E7SUFLUTtFRGlUVjtBQUNGO0FDOVNJO0VBQ0k7RUFDQTtBRGdUUjtBQzdTSTtFQUNJO0VBQ0EsbUJDbkVFO0FGa1hWO0FDM1NRO0VBQ0k7RUFDQTtBRDZTWjtBR3JXSTtFRnNESTtJQUtRO0lBQ0E7RUQ4U2Q7QUFDRjtBQzNTUTtFQUNJO0VBQ0E7QUQ2U1o7QUcvV0k7RUZnRUk7SUFLUTtFRDhTZDtBQUNGO0FDM1NRO0VBQ0k7RUFDQTtBRDZTWjtBR3hYSTtFRnlFSTtJQUtRO0VEOFNkO0FBQ0Y7O0FDeFNJO0VBQ0k7RUFDQSxnQkN2RUM7RUR3RUQ7RUFDQTtBRDJTUjs7QUlyWkE7RUFDSTtFQUNBO0VBQ0EsbUJGSE07QUYyWlY7O0FJclpBO0VBRUksaUJGUU87RUVQUDtBSnVaSjtBRy9ZSTtFQ1hKO0lBTVEsZUZLSDtFRm1aSDtBQUNGOztBSXJaQTtFQUVJO0VBQ0E7QUp1Wko7QUd6Wkk7RUNESjtJQU1RLGlCRkhIO0VGMlpIO0FBQ0Y7O0FJclpBO0VBRUksaUJGUk87RUVTUDtBSnVaSjtBR25hSTtFQ1NKO0lBTVEsZUZYSDtFRm1hSDtBQUNGOztBSXJaQTtFQUVJLGtCRmhCTztFRWlCUDtBSnVaSjtBRzdhSTtFQ21CSjtJQU1RLGtCRm5CSDtFRjJhSDtBQUNGOztBSXJaQTtFQUVJLGlCRnhCTztFRXlCUDtFQUNBO0FKdVpKO0FHeGJJO0VDNkJKO0lBT1EsaUJGNUJIO0VGb2JIO0FBQ0Y7O0FJclpBO0VBRUksa0JGakNDO0VFa0NEO0VBQ0E7QUp1Wko7O0FJcFpBO0VBQ0k7RUFDQTtFQUNBLG1CRm5FTTtBRjBkVjtBSXJaSTtFQUNJO0FKdVpSOztBSWxaSTtFQUNJO0FKcVpSO0FJbFpJO0VBQ0k7QUpvWlI7QUlqWkk7RUFDSTtBSm1aUjs7QUkvWUE7RUFDSTtBSmtaSjs7QUkvWUE7RUFDSTtBSmtaSjs7QUkvWUE7RUFDSTtFQUNBLDJCRnRGSztFRXVGTDtFQUNBO0VBQ0E7RUFDQSxXRjFGSztBRjRlVDtBSWhaSTtFQUNJO0FKa1pSOztBSTlZQTtFQUNJO0VBQ0EsbUJGL0dNO0VFZ0hOO0FKaVpKOztBSTlZQTtFQUVJO0FKZ1pKO0FJOVlJO0VBQ0k7QUpnWlI7QUkvWVE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0Esc0JGdEhIO0FGdWdCVDs7QUl4WUE7RUFDSTtFQUNBO0FKMllKOztBS3hoQkE7RUFDSSx5QkhhSztFR1pMO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBTDJoQko7QUt4aEJJO0VBQ0ksaUJIcUJJO0VHcEJKO0VBQ0E7RUFDQTtBTDBoQlI7QUt4aEJRO0VBQ0k7RUFDQTtBTDBoQlo7O0FNMWlCQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FONmlCSjtBTTNpQkk7RUFDSSx5QkpKQztFSUtEO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QU42aUJSO0FNM2lCUTtFQUNJO0VBQ0E7RUFDQTtFQUNBLGlCSkdBO0VJRkE7RUFDQTtBTjZpQlo7QU0zaUJZO0VBQ0k7RUFDQTtFQUNBO0FONmlCaEI7QU0xaUJvQjtFQUNJO0VBQ0E7QU40aUJ4QjtBTXZpQm9CO0VBQ0ksa0JKL0NkO0FGd2xCVjtBTWhpQlE7RUFDSTtFQUNBO0FOa2lCWjtBTTdoQlE7RUFDSTtBTitoQlo7O0FPNWxCQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0FQK2xCSjtBTzdsQkk7RUpnQkY7QUhnbEJGO0FHOWtCRTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0FIZ2xCSjtBRzdrQkU7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FIK2tCSjtBTzFtQlE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtBUDRtQlo7O0FRNW5CQTtFQUNJO0VBQ0E7QVIrbkJKO0FHaG5CSTtFS2pCSjtJQUtRO0lBQ0E7RVJnb0JOO0FBQ0Y7O0FTbm9CQTtFQUNJO0VBQ0E7QVRzb0JKO0FTcG9CSTtFQUNJO0VBQ0E7RUFDQTtBVHNvQlI7QVNub0JJO0VBQ0k7QVRxb0JSO0FTbm9CUTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0FUcW9CWjtBU2xvQlE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBVG9vQlo7QVNob0JJO0VBQ0ksaUJQcENFO0VPcUNGO0VBQ0E7RUFDQTtFQUNBLFNQeENFO0FGMHFCVjtBUy9uQlk7RUFDSTtBVGlvQmhCO0FTOW5CWTtFQUNJO0FUZ29CaEI7QVN6bkJJO0VBQ0k7QVQybkJSO0FTem5CUTtFQUNJO0FUMm5CWjtBR3JxQkk7RU15Q0k7SUFJUTtFVDRuQmQ7QUFDRjs7QVV4ckJBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FWMnJCSjtBRy9xQkk7RU9sQko7SUFTUTtJQUNBO0VWNHJCTjtBQUNGO0FVMXJCSTtFQUNJO0VBQ0E7RUFDQTtFQUNBLGlCUllJO0VRWEo7RUFDQSxTUnRCRTtBRmt0QlY7QVUxckJRO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBVjRyQlo7QVUxckJZO0VBQ0k7QVY0ckJoQjtBVTFyQmdCO0VBQ0k7QVY0ckJwQjtBVXpyQmdCO0VBQ0k7QVYyckJwQjtBVXRyQlE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtBVndyQlo7QVVyckJRO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FWdXJCWjtBVXByQmdCO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7QVZzckJwQjs7QVUvcUJBO0VBQ0k7QVZrckJKO0FHeHZCSTtFT3FFSjtJQUlRO0VWbXJCTjtBQUNGO0FVaHJCSTtFQUVJO0FWaXJCUjtBVTdxQkk7RUFDSSxpQlJoRUg7QUYrdUJMO0FVNXFCSTtFQUNJO0FWOHFCUjs7QVd4d0JBO0VBQ0k7RUFDQTtBWDJ3Qko7QVd6d0JJO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBWDJ3QlI7QUc5d0JJO0VRRkE7SUFRUTtFWDR3QlY7QUFDRjtBVzF3QlE7RUFDSTtBWDR3Qlo7QVd6d0JnQjtFQUNJO0FYMndCcEI7QVd4d0JnQjtFQUNJO0FYMHdCcEI7QVdqd0JZO0VBREo7SUFFUTtFWG93QmQ7QUFDRjtBR2p5Qkk7RVFxQ1E7SUFFUTtFWDh2QmxCO0FBQ0Y7QUd0eUJJO0VRaURvQjtJQUNJO0VYd3ZCMUI7RVdydkJzQjtJQUNJO0VYdXZCMUI7QUFDRjtBRzl5Qkk7RVFpRW9CO0lBQ0k7RVhndkIxQjtFVzd1QnNCO0lBQ0k7RVgrdUIxQjtBQUNGO0FHdHpCSTtFUWdGUTtJQUVRO0VYd3VCbEI7QUFDRjtBRzN6Qkk7RVEwRlE7SUFFUTtFWG11QmxCO0FBQ0Y7O0FZdDBCQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBWnkwQko7QVlyMEJZO0VBQ0k7RUFDQTtBWnUwQmhCO0FZbDBCWTtFQUNJO0VBQ0E7QVpvMEJoQjtBWS96Qlk7RUFDSTtFQUNBO0FaaTBCaEI7QVk1ekJJO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBLGlCVlJJO0VVU0o7RUFDQTtBWjh6QlI7QUduMUJJO0VTYUE7SUFXUTtJQUNBO0VaK3pCVjtBQUNGO0FZMXpCSTtFQUNRO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBWjR6Qlo7QVkxekJZO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7QVo0ekJoQjtBWXh6Qkk7RUFDSTtBWjB6QlI7QUd0M0JJO0VTMkRBO0lBSVE7RVoyekJWO0FBQ0Y7QUduM0JJO0VTbURBO0lBUVE7RVo0ekJWO0FBQ0Y7QVl6ekJZO0VBQ0k7QVoyekJoQjtBWXh6Qlk7RUFDSTtBWjB6QmhCO0FZdHpCUTs7RUFFSTtBWnd6Qlo7O0FhaDVCQTtFQUNJLGdCWDZCSztBRnMzQlQ7O0FhaDVCQTtFQUNJO0VBQ0E7QWJtNUJKO0FhajVCSTtFQUNJO0FibTVCUjtBYWo1QlE7RUFDSTtFQUNBLG1CWGhCRjtBRm02QlY7QWFsNUJZO0VBQ0ksa0JYS1g7RVdKVztFQUNBO0VBQ0E7RUFDQTtBYm81QmhCO0FhaDVCUTtFQUNJLGtCWERQO0VXRU87QWJrNUJaO0FhOTRCSTtFQUNJLG1CWGpDRTtBRmk3QlY7QWE3NEJJO0VBQ0k7RUFDQTtFQUNBO0FiKzRCUjtBYTc0QlE7RUFDUTtFQUNBO0FiKzRCaEI7O0FheDRCSTtFQUNJO0VBQ0E7QWIyNEJSOztBYzc3QkE7RUFDSTtFQUNBO0FkZzhCSjtBYzc3Qkk7RUFDSSxnQlp5QkM7RVl4QkQ7RUFDQTtBZCs3QlI7QWM1N0JJO0VBQ0k7RUFDQTtFQUNBO0FkODdCUjtBYzM3Qkk7RUFDSTtFQUNBO0VBQ0E7RUFDQSxhWnZCRTtFWXdCRjtFQUNBLGtCWkNIO0VZQUc7RUFDQSx5QlpiQztFWWNEO0VBQ0E7RUFDQTtFQUNBO0FkNjdCUjtBYzM3QlE7RUFFSTtFQUNBO0VBQ0EseUJaMUJIO0VZMkJHO0FkNDdCWjtBY3o3QlE7RUFDSTtFQUNBO0VBQ0E7RUFDQSxTWjdDRjtBRncrQlY7QWN4N0JRO0VBQ0k7RUFDQTtFQUNBLFdabkRGO0VZb0RFO0FkMDdCWjtBY3A3Qlk7RUFDSTtFQUNBLGFaNUROO0FGay9CVjtBY243Qlk7RUFDSTtBZHE3QmhCO0FjaDdCSTtFQUNJO0VBQ0E7RUFDQTtFQUNBLGtCWnpFRTtFWTBFRixtQloxRUU7QUY0L0JWOztBYzU2Qkk7O0VBQ0k7QWRnN0JSO0FjOTZCSTs7RUFDSTtBZGk3QlI7O0FjNTZCSTtFQUNJLGNaL0VDO0FGOC9CVDs7QWMxNkJJO0VBQ0ksc0JacEZDO0VZcUZEO0FkNjZCUjtBYzM2QlE7RUFFSTtBZDQ2Qlo7O0FjdDZCSTtFQUNJLHNCWmhHQztBRnlnQ1Q7QWN2NkJRO0VBRUk7QWR3NkJaOztBZXRoQ0E7RUFDSTtFQUNBO0FmeWhDSjtBZXhoQ0k7RUFDSTtFQUNBO0FmMGhDUjs7QWVyaENJO0VBQ0k7QWZ3aENSO0FldGhDUTtFQUNJO0Fmd2hDWjtBZXRoQ1k7RUFDSTtFQUNBO0VBQ0E7RUFDQTtBZndoQ2hCO0FlcmhDWTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBZnVoQ2hCOztBZ0JyakNBO0VBQ0k7RUFDQTtFQUNBO0FoQndqQ0o7QUc5aUNJO0VhYko7SUFNUTtFaEJ5akNOO0FBQ0Y7O0FpQmprQ0E7RUFDSTtFQUNBO0FqQm9rQ0o7QWlCbGtDSTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBakJva0NSO0FpQmxrQ1E7RUFDSTtFQUNBO0VBQ0E7QWpCb2tDWjtBR2hsQ0k7RWNTSTtJQU1RLGdCZmhCRztFRnFsQ2pCO0FBQ0Y7QUd6bENJO0VjYUk7SUFVUSxnQmZ0QlE7RUY0bEN0QjtBQUNGO0FHbGxDSTtFY0NJO0lBY1EsaUJmM0JJO0VGa21DbEI7QUFDRjtBR25sQ0k7RWNISTtJQWtCUSxpQmZoQ1M7RUZ3bUN2QjtBQUNGO0FHeGxDSTtFY0hJO0lBc0JRO0lBQ0E7RWpCeWtDZDtBQUNGO0FpQnRrQ1E7RUFDSSx5QmZuQ0g7RWVvQ0c7QWpCd2tDWjtBaUJya0NRO0VBQ0ksc0JmdkNIO0Vld0NHO0FqQnVrQ1o7QWlCcGtDUTtFQUNJLHlCZjNDSDtFZTRDRyxjZjlDSDtBRm9uQ1Q7QWlCbmtDUTtFQUNJLHlCZi9DSDtFZWdERyxjZm5ESDtBRnduQ1Q7QUc5bkNJO0VjOERJO0lBRVE7RWpCa2tDZDtBQUNGO0FHbm9DSTtFY3NFSTtJQUVRO0VqQitqQ2Q7QUFDRjtBaUIzakNJO0VBQ0k7RUFDQTtFQUNBO0FqQjZqQ1I7QWlCMWpDSTtFQUNJO0VBQ0E7RUFDQTtBakI0akNSO0FpQjFqQ1E7RUFDSTtJQUNJO0lBQ0E7RWpCNGpDZDtBQUNGO0FpQnhqQ1k7RUFDSTtFQUNBO0VBQ0E7RUFDQTtBakIwakNoQjs7QWtCanFDQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QWxCb3FDSjs7QWtCanFDQTtFQUNJO0VBQ0E7QWxCb3FDSjtBa0JscUNJO0VBQ0k7RUFDQSxpQmhCZ0JJO0VnQmZKO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FsQm9xQ1I7QWtCanFDSTtFQUNJO0VBQ0E7QWxCbXFDUjtBa0JqcUNRO0VBRUk7RUFDQTtBbEJrcUNaO0FrQi9wQ1E7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QWxCaXFDWjtBa0IvcENZO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7QWxCaXFDaEI7QWtCNXBDSTs7RUFFSTtBbEI4cENSOztBUXJ0Q0E7RUFDSTtFQUNBO0FSd3RDSjtBR3pzQ0k7RUtqQko7SUFLUTtJQUNBO0VSeXRDTjtBQUNGOztBbUI1dENBO0VBRUk7QW5COHRDSjtBbUI1dENJO0VBQ0kseUJqQkVDO0VpQkREO0FuQjh0Q1I7QW1CM3RDSTtFQUNJLHNCakJGQztFaUJHRDtBbkI2dENSO0FtQjF0Q0k7RUFDSSx5QmpCTkM7QUZrdUNUO0FtQnp0Q0k7RUFDSSx5QmpCVEM7QUZvdUNUO0FtQnh0Q0k7RUFDSSxpQmpCS0k7RWlCSko7RUFDQTtBbkIwdENSO0FtQnZ0Q1k7RUFDSTtBbkJ5dENoQjtBbUJ0dENZO0VBQ0k7QW5Cd3RDaEI7O0FvQjF2Q0E7RUFDSTtFQUNBO0FwQjZ2Q0o7QW9CM3ZDSTtFQUNJO0VBQ0E7RUFDQTtFQUNBLGlCbEJxQkk7QUZ3dUNaO0FvQjF2Q0k7RUFDSTtFQUNBO0VBQ0EsU2xCakJFO0VrQmtCRjtBcEI0dkNSO0FvQnp2Q0k7RUFDSTtBcEIydkNSO0FHeHdDSTtFaUJZQTtJQUlRO0VwQjR2Q1Y7QUFDRjtBb0IxdkNRO0VBQ0k7QXBCNHZDWjtBb0IxdkNZO0VBQ0k7QXBCNHZDaEI7QW9CMXZDZ0I7RUFDSTtBcEI0dkNwQjtBb0J2dkNRO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7QXBCeXZDWjs7QXFCbHlDQztFQUNHO0VBQ0E7QXJCcXlDSjtBcUJseUNRO0VBQ0k7QXJCb3lDWjtBcUJseUNZO0VBQ0k7QXJCb3lDaEI7QXFCanlDWTtFQUNJO0FyQm15Q2hCO0FxQmh5Q1k7RUFDSTtFQUNBLGtCbkJyQk47QUZ1ekNWO0FxQnp4Q2dCO0VBQ0k7QXJCMnhDcEI7QXFCcHhDZ0I7RUFDSTtBckJzeENwQjtBRzV5Q0k7RWtCcUJZO0lBSVE7RXJCdXhDdEI7QUFDRjtBcUJoeENnQjtFQUNJO0FyQmt4Q3BCO0FHcHpDSTtFa0JpQ1k7SUFJUTtFckJteEN0QjtBQUNGO0FxQjd3Q0k7RUFDSSxTbkI5REU7RW1CK0RGO0VBQ0E7QXJCK3dDUjtBcUI1d0NJO0VBQ0k7RUFDQSxpQm5CckNJO0VtQnNDSjtBckI4d0NSO0FxQjN3Q0k7RUFDSSx5Qm5CNURDO0FGeTBDVDtBcUIzd0NRO0VBQ0ksYW5CN0VGO0FGMDFDVjtBcUIxd0NRO0VBQ0k7RUFDQTtFQUNBLGtCbkJ6RFA7QUZxMENMO0FHOTBDSTtFa0IrREk7SUFNUSxpQm5CN0RYO0VGMDBDSDtBQUNGO0FxQjF3Q1E7RUFDSTtFQUNBO0VBQ0E7QXJCNHdDWjs7QXFCcndDSTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QXJCd3dDUjs7QXNCOTJDQTtFQUNJO0VBQ0E7RUFDQSxnQnBCMkJLO0VvQjFCTDtBdEJpM0NKO0FzQi8yQ0k7RUFDSTtFQUNBLG1CcEJYRTtBRjQzQ1Y7QXNCaDNDUTtFQUNJLGtCcEJVUDtFb0JUTztFQUNBO0VBQ0E7RUFDQTtBdEJrM0NaO0FzQjkyQ0k7RUFDSSxrQnBCSUg7RW9CSEc7QXRCZzNDUjs7QXNCMTJDSTtFQUNJO0VBQ0E7QXRCNjJDUjs7QXVCMTRDQTtFQUNJO0VBQ0E7RUFDQSxnQnJCNEJLO0VxQjNCTDtFQUNBO0VBQ0Esc0JyQklLO0VxQkhMO0F2QjY0Q0o7O0F1Qng0Q1E7RUFDSSx5QnJCREg7QUY0NENUO0F1QnQ0Q1E7RUFDSSx5QnJCVkg7QUZrNUNUOztBd0IxNUNBO0VBQ0k7RUFDQTtBeEI2NUNKO0F3QjM1Q0k7RUFDSTtFQUNBLGdCdEJ3QkM7RXNCdkJEO0VBQ0E7QXhCNjVDUjtBd0IzNUNRO0VBQ0k7RUFDQTtBeEI2NUNaO0FHMzVDSTtFcUJKSTtJQUtRO0V4Qjg1Q2Q7QUFDRjtBd0IzNUNRO0VBQ0k7RUFDQTtBeEI2NUNaO0F3Qno1Q0k7RUFDSTtFQUNBO0F4QjI1Q1I7QUd4NkNJO0VxQldBO0lBS1E7SUFDQTtFeEI0NUNWO0FBQ0Y7QXdCejVDSTtFQUNJO0VBQ0E7RUFDQTtBeEIyNUNSO0FHbjdDSTtFcUJxQkE7SUFNUTtFeEI0NUNWO0FBQ0Y7O0F5Qno4Q0E7RUFDSTtBekI0OENKO0F5QjM4Q0k7RUFDSTtFQUNBLFN2QkpFO0V1QktGO0F6QjY4Q1I7QUdqOENJO0VzQmZBO0lBTVE7SUFDQTtFekI4OENWO0FBQ0Y7O0EwQng5Q0E7RUFDSSxpQnhCRE07RXdCRU4sb0J4QkZNO0FGNjlDVjs7QTJCNzlDQTtFQUNJO0EzQmcrQ0o7QUd4OUNJO0V3QlRKO0lBSVE7RTNCaStDTjtBQUNGO0EyQmgrQ0k7RXhCbUJGO0V3QmpCTSxtQnpCUkU7QUYwK0NWO0FHLzhDRTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0FIaTlDSjtBRzk4Q0U7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FIZzlDSjtBMkI3K0NRO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7QTNCKytDWjtBMkJ4K0NZO0VBQ0k7QTNCMCtDaEI7QTJCditDWTtFQUNJO0EzQnkrQ2hCOztBNEJuZ0RBO0VBQ0kseUIxQlVLO0UwQlRMLGExQkZNO0UwQkdOO0E1QnNnREo7QTRCcGdESTtFQUNJLGlCMUIwQkk7RTBCekJKO0VBQ0E7RUFDQTtFQUNBO0E1QnNnRFI7QUcvL0NJO0V5QlpBO0lBUVE7RTVCdWdEVjtBQUNGO0E0QnJnRFE7RUFDSTtBNUJ1Z0RaOztBNkJ0aERJO0VBQ0k7RUFDQTtFQUNBO0E3QnloRFI7QTZCdGhEWTtFQUNJO0VBQ0E7QTdCd2hEaEI7O0E4QmppREk7RUFDSTtFQUNBO0VBQ0E7QTlCb2lEUjtBOEJqaURZO0VBQ0k7RUFDQTtBOUJtaURoQjs7QStCM2lESTtFQUNJO0VBQ0E7RUFDQTtBL0I4aURSO0ErQjVpRFk7RUFDSTtFQUNBO0EvQjhpRGhCO0ErQnppREk7RUFDSTtFQUNBO0VBQ0E7QS9CMmlEUixDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd3AtYm9pbGVycGxhdGUvLi9zYXNzL2Jhc2UvX25vcm1hbGl6ZS5zY3NzIiwid2VicGFjazovL3dwLWJvaWxlcnBsYXRlLy4vc2Fzcy9tYWluLnNjc3MiLCJ3ZWJwYWNrOi8vd3AtYm9pbGVycGxhdGUvLi9zYXNzL3RoZW1lL190aGVtZS5zY3NzIiwid2VicGFjazovL3dwLWJvaWxlcnBsYXRlLy4vc2Fzcy91dGlscy9fdmFyaWFibGVzLnNjc3MiLCJ3ZWJwYWNrOi8vd3AtYm9pbGVycGxhdGUvLi9zYXNzL3V0aWxzL19taXhpbnMuc2NzcyIsIndlYnBhY2s6Ly93cC1ib2lsZXJwbGF0ZS8uL3Nhc3MvdGhlbWUvX3R5cG9ncmFwaHkuc2NzcyIsIndlYnBhY2s6Ly93cC1ib2lsZXJwbGF0ZS8uL3Nhc3MvbGF5b3V0L19hbGVydC5zY3NzIiwid2VicGFjazovL3dwLWJvaWxlcnBsYXRlLy4vc2Fzcy9sYXlvdXQvX2hlYWRlcm5hdmlnYXRpb24uc2NzcyIsIndlYnBhY2s6Ly93cC1ib2lsZXJwbGF0ZS8uL2d1dGVuYmVyZy9iYW5uZXItaW1hZ2Uvc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly93cC1ib2lsZXJwbGF0ZS8uL3Nhc3MvdXRpbHMvX2V4dGVuZHMuc2NzcyIsIndlYnBhY2s6Ly93cC1ib2lsZXJwbGF0ZS8uL2d1dGVuYmVyZy9jYWxsb3V0L3N0eWxlLnNjc3MiLCJ3ZWJwYWNrOi8vd3AtYm9pbGVycGxhdGUvLi9ndXRlbmJlcmcvY2FyZC1ncm91cC9zdHlsZS5zY3NzIiwid2VicGFjazovL3dwLWJvaWxlcnBsYXRlLy4vZ3V0ZW5iZXJnL2NvbHVtbnMvc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly93cC1ib2lsZXJwbGF0ZS8uL2d1dGVuYmVyZy9jdGEvc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly93cC1ib2lsZXJwbGF0ZS8uL2d1dGVuYmVyZy9jdXN0b21lci10ZXN0aW1vbmlhbHMvc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly93cC1ib2lsZXJwbGF0ZS8uL2d1dGVuYmVyZy9mYXFzL3N0eWxlLnNjc3MiLCJ3ZWJwYWNrOi8vd3AtYm9pbGVycGxhdGUvLi9ndXRlbmJlcmcvZmVlZC9zdHlsZS5zY3NzIiwid2VicGFjazovL3dwLWJvaWxlcnBsYXRlLy4vZ3V0ZW5iZXJnL2ZpeGVkLXNwYWNlci9zdHlsZS5zY3NzIiwid2VicGFjazovL3dwLWJvaWxlcnBsYXRlLy4vZ3V0ZW5iZXJnL2ZsZXhpYmxvY2svc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly93cC1ib2lsZXJwbGF0ZS8uL2d1dGVuYmVyZy9oZXJvL3N0eWxlLnNjc3MiLCJ3ZWJwYWNrOi8vd3AtYm9pbGVycGxhdGUvLi9ndXRlbmJlcmcvcGFuZWwvc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly93cC1ib2lsZXJwbGF0ZS8uL2d1dGVuYmVyZy9wYXJ0bmVycy9zdHlsZS5zY3NzIiwid2VicGFjazovL3dwLWJvaWxlcnBsYXRlLy4vZ3V0ZW5iZXJnL3Byb21vLWdyb3VwL3N0eWxlLnNjc3MiLCJ3ZWJwYWNrOi8vd3AtYm9pbGVycGxhdGUvLi9ndXRlbmJlcmcvcXVvdGUvc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly93cC1ib2lsZXJwbGF0ZS8uL2d1dGVuYmVyZy9zZXBhcmF0b3Ivc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly93cC1ib2lsZXJwbGF0ZS8uL2d1dGVuYmVyZy9zaXRlLXNlYXJjaC9zdHlsZS5zY3NzIiwid2VicGFjazovL3dwLWJvaWxlcnBsYXRlLy4vc2Fzcy9sYXlvdXQvX3Bvc3RsaXN0LnNjc3MiLCJ3ZWJwYWNrOi8vd3AtYm9pbGVycGxhdGUvLi9zYXNzL2xheW91dC9fZmlsdGVycy5zY3NzIiwid2VicGFjazovL3dwLWJvaWxlcnBsYXRlLy4vc2Fzcy9sYXlvdXQvX3Bvc3RjYXJkLnNjc3MiLCJ3ZWJwYWNrOi8vd3AtYm9pbGVycGxhdGUvLi9zYXNzL2xheW91dC9fZm9vdGVyLnNjc3MiLCJ3ZWJwYWNrOi8vd3AtYm9pbGVycGxhdGUvLi9zYXNzL2xheW91dC9fZm9vdGVybmF2aWdhdGlvbi5zY3NzIiwid2VicGFjazovL3dwLWJvaWxlcnBsYXRlLy4vc2Fzcy9sYXlvdXQvX3NvY2lhbG1lZGlhLnNjc3MiLCJ3ZWJwYWNrOi8vd3AtYm9pbGVycGxhdGUvLi9zYXNzL2xheW91dC9fY29udGFjdG1ldGhvZHMuc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cblxubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICBtYXJnaW46IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuIiwiLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cbiAgaGVpZ2h0OiAwOyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDsgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5idXR0b24sXG5pbnB1dCB7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuW3R5cGU9YnV0dG9uXSxcblt0eXBlPXJlc2V0XSxcblt0eXBlPXN1Ym1pdF0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1idXR0b25dOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9cmVzZXRdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9c3VibWl0XTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPWJ1dHRvbl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1yZXNldF06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1zdWJtaXRdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuW3R5cGU9Y2hlY2tib3hdLFxuW3R5cGU9cmFkaW9dIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1udW1iZXJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5bdHlwZT1zZWFyY2hdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cblt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cbiAqL1xuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXG4gKi9cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG46cm9vdCB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cblxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogXCJQb3BwaW5zXCIsIHNhbnMtc2VyaWY7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIHBhZGRpbmctdG9wOiA1cmVtO1xufVxuXG4uY29udGFpbmVyX19tYWluID4gKiB7XG4gIHBhZGRpbmctbGVmdDogMnJlbTtcbiAgcGFkZGluZy1yaWdodDogMnJlbTtcbiAgbWF4LXdpZHRoOiAxNDAwcHg7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xufVxuLmNvbnRhaW5lcl9fbWFpbiAuY29udGFpbmVyX19mdWxsIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG4ubWFyZ2luc19fdG9wQm90dG9tIHtcbiAgbWFyZ2luLXRvcDogMnJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLm1hcmdpbnNfX3RvcEJvdHRvbSB7XG4gICAgbWFyZ2luLXRvcDogNHJlbTtcbiAgICBtYXJnaW4tYm90dG9tOiA0cmVtO1xuICB9XG59XG4ubWFyZ2luc19fdG9wIHtcbiAgbWFyZ2luLXRvcDogMnJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLm1hcmdpbnNfX3RvcCB7XG4gICAgbWFyZ2luLXRvcDogNHJlbTtcbiAgfVxufVxuLm1hcmdpbnNfX2JvdHRvbSB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDJyZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5tYXJnaW5zX19ib3R0b20ge1xuICAgIG1hcmdpbi1ib3R0b206IDRyZW07XG4gIH1cbn1cbi5tYXJnaW5zX19ub25lIHtcbiAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50O1xuICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG59XG4ubWFyZ2luc19faW5Db250ZW50IHtcbiAgbWFyZ2luLXRvcDogY2FsYygxcmVtIC8gMik7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG4ubWFyZ2luc19fZG91YmxlLm1hcmdpbnNfX3RvcEJvdHRvbSB7XG4gIG1hcmdpbi10b3A6IDRyZW07XG4gIG1hcmdpbi1ib3R0b206IDRyZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5tYXJnaW5zX19kb3VibGUubWFyZ2luc19fdG9wQm90dG9tIHtcbiAgICBtYXJnaW4tdG9wOiA4cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDhyZW07XG4gIH1cbn1cbi5tYXJnaW5zX19kb3VibGUubWFyZ2luc19fdG9wIHtcbiAgbWFyZ2luLXRvcDogNHJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLm1hcmdpbnNfX2RvdWJsZS5tYXJnaW5zX190b3Age1xuICAgIG1hcmdpbi10b3A6IDhyZW07XG4gIH1cbn1cbi5tYXJnaW5zX19kb3VibGUubWFyZ2luc19fYm90dG9tIHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogNHJlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLm1hcmdpbnNfX2RvdWJsZS5tYXJnaW5zX19ib3R0b20ge1xuICAgIG1hcmdpbi1ib3R0b206IDhyZW07XG4gIH1cbn1cblxuLmNvbnRlbnRfX25hcnJvdyB7XG4gIHdpZHRoOiA4MCU7XG4gIG1heC13aWR0aDogNzQwcHg7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG5cbmg2LCBoNSwgaDQsIGgzLCBoMiwgaDEge1xuICBmb250LXdlaWdodDogNzAwO1xuICBtYXJnaW4tdG9wOiBjYWxjKDFyZW0gLyAyKTtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbn1cblxuaDEge1xuICBmb250LXNpemU6IDIuNXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMzU7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIGgxIHtcbiAgICBmb250LXNpemU6IDNyZW07XG4gIH1cbn1cblxuaDIge1xuICBmb250LXNpemU6IDJyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjM7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIGgyIHtcbiAgICBmb250LXNpemU6IDIuNXJlbTtcbiAgfVxufVxuXG5oMyB7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBsaW5lLWhlaWdodDogMS4yNTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgaDMge1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgfVxufVxuXG5oNCB7XG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMjtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgaDQge1xuICAgIGZvbnQtc2l6ZTogMS43NXJlbTtcbiAgfVxufVxuXG5oNSB7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjI7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIGg1IHtcbiAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgfVxufVxuXG5oNiB7XG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xuICBsaW5lLWhlaWdodDogMS4xNTtcbn1cblxucCB7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgbWFyZ2luLXRvcDogY2FsYygxcmVtIC8gMik7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG5wLmlzLXN0eWxlLWxlYWQge1xuICBmb250LXNpemU6IDEuM3JlbTtcbn1cblxuLmhhcy10ZXh0LWFsaWduLWxlZnQge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuLmhhcy10ZXh0LWFsaWduLWNlbnRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5oYXMtdGV4dC1hbGlnbi1yaWdodCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG5lbSB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICB0ZXh0LWRlY29yYXRpb24tY29sb3I6ICMzMzM7XG4gIHRleHQtdW5kZXJsaW5lLW9mZnNldDogMC4yZW07XG4gIHRleHQtZGVjb3JhdGlvbi10aGlja25lc3M6IDAuMWVtO1xuICB0cmFuc2l0aW9uOiB0ZXh0LWRlY29yYXRpb24tY29sb3IgMC4xNXMgZWFzZTtcbiAgY29sb3I6ICMzMzM7XG59XG5hOmhvdmVyIHtcbiAgdGV4dC1kZWNvcmF0aW9uLWNvbG9yOiByZ2JhKDUxLCA1MSwgNTEsIDAuMjUpO1xufVxuXG5vbCwgdWwge1xuICBtYXJnaW4tdG9wOiBjYWxjKDFyZW0gLyAyKTtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgcGFkZGluZy1sZWZ0OiAycmVtO1xufVxuXG51bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG51bCBsaSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbnVsIGxpOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IC0yNHB4O1xuICB0b3A6IDZweDtcbiAgd2lkdGg6IDEycHg7XG4gIGhlaWdodDogMTJweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xufVxuXG4udGVzdGluZyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcbiAgY29sb3I6IGJsdWU7XG59XG5cbi5hbGVydCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMmY1ZjY7XG4gIHBhZGRpbmc6IGNhbGMoMXJlbSAvIDIpIDFyZW07XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiA5MHB4O1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgei1pbmRleDogMTAwO1xufVxuLmFsZXJ0X19jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDE0MDBweDtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmFsZXJ0X19jb250YWluZXIgcCB7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG4gIG1hcmdpbjogMDtcbn1cblxuLmhlYWRlcm5hdmlnYXRpb24ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDJyZW07XG4gIHotaW5kZXg6IDEwMDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE2MTYxNjtcbiAgaGVpZ2h0OiA5MHB4O1xufVxuLmhlYWRlcm5hdmlnYXRpb25fX2ZseW91dCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxNjE2MTY7XG4gIGNvbG9yOiAjZmZmO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3M7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcbn1cbi5oZWFkZXJuYXZpZ2F0aW9uX19mbHlvdXQtLWNvbnRhaW5lciB7XG4gIGhlaWdodDogMTAwJTtcbiAgcGFkZGluZzogNXJlbSAxcmVtO1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxNDAwcHg7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG4uaGVhZGVybmF2aWdhdGlvbl9fZmx5b3V0LS1jb250YWluZXIgdWwge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG4uaGVhZGVybmF2aWdhdGlvbl9fZmx5b3V0LS1jb250YWluZXIgdWwgbGkgYSB7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG4uaGVhZGVybmF2aWdhdGlvbl9fZmx5b3V0LS1jb250YWluZXIgdWwgdWwgbGkge1xuICBwYWRkaW5nLWxlZnQ6IDFyZW07XG59XG4uaGVhZGVybmF2aWdhdGlvbl9fYnV0dG9uLS1jb250YWluZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDE7XG59XG4uaGVhZGVybmF2aWdhdGlvbl9fb3BlbiAuaGVhZGVybmF2aWdhdGlvbl9fZmx5b3V0IHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xufVxuXG5kaXYuYmFubmVyaW1hZ2Uge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDA7XG4gIGNvbnRlbnQtdmlzaWJpbGl0eTogYXV0bztcbiAgY29udGFpbi1pbnRyaW5zaWMtc2l6ZTogNjAwcHg7XG59XG5kaXYuYmFubmVyaW1hZ2VfX21lZGlhIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuZGl2LmJhbm5lcmltYWdlX19tZWRpYTpiZWZvcmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29udGVudDogXCJcIjtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmctdG9wOiBjYWxjKCg3IC8gMTYpICogMTAwJSk7XG59XG5kaXYuYmFubmVyaW1hZ2VfX21lZGlhIGltZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xufVxuZGl2LmJhbm5lcmltYWdlX19tZWRpYSBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXI7XG59XG5cbmRpdi5wYW5lbCB7XG4gIHBhZGRpbmctdG9wOiAycmVtO1xuICBwYWRkaW5nLWJvdHRvbTogMnJlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgZGl2LnBhbmVsIHtcbiAgICBwYWRkaW5nLXRvcDogNHJlbTtcbiAgICBwYWRkaW5nLWJvdHRvbTogNHJlbTtcbiAgfVxufVxuXG4uY2FsbG91dCB7XG4gIGNvbnRlbnQtdmlzaWJpbGl0eTogYXV0bztcbiAgY29udGFpbi1pbnRyaW5zaWMtc2l6ZTogODAwcHg7XG59XG4uY2FsbG91dF9fY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiA5MDBweDtcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbn1cbi5jYWxsb3V0X19tZWRpYSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5jYWxsb3V0X19tZWRpYTpiZWZvcmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29udGVudDogXCJcIjtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmctdG9wOiA3NSU7XG59XG4uY2FsbG91dF9fbWVkaWEgaW1nIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBvYmplY3QtcG9zaXRpb246IGNlbnRlcjtcbn1cbi5jYWxsb3V0X19jb250ZW50IHtcbiAgcGFkZGluZy10b3A6IDFyZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGdhcDogMXJlbTtcbn1cbi5jYWxsb3V0X19jb250ZW50ID4gKjpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi10b3A6IDA7XG59XG4uY2FsbG91dF9fY29udGVudCA+ICo6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG4uY2FsbG91dF9faXRlbSB7XG4gIGZsZXg6IDAgMSBjYWxjKDMzLjMzMyUgLSAxMXB4KTtcbn1cbi5jYWxsb3V0X19pdGVtLS1jb250ZW50IHtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhbGxvdXRfX2l0ZW0tLWNvbnRlbnQge1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgfVxufVxuXG4uY2FyZGdyb3VwIHtcbiAgY29udGVudC12aXNpYmlsaXR5OiBhdXRvO1xuICBjb250YWluLWludHJpbnNpYy1zaXplOiA4MDBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nLXRvcDogMnJlbTtcbiAgcGFkZGluZy1ib3R0b206IDJyZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTYwMHB4KSB7XG4gIC5jYXJkZ3JvdXAge1xuICAgIHBhZGRpbmctdG9wOiA2cmVtO1xuICAgIHBhZGRpbmctYm90dG9tOiA2cmVtO1xuICB9XG59XG4uY2FyZGdyb3VwX19jb250YWluZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDI7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDE0MDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGdhcDogMXJlbTtcbn1cbi5jYXJkZ3JvdXBfX2NvbnRhaW5lci0tdGl0bGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogODAwcHg7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIG1hcmdpbi1ib3R0b206IDJyZW07XG59XG4uY2FyZGdyb3VwX19jb250YWluZXItLXRpdGxlID4gKiB7XG4gIGNvbG9yOiAjZmZmO1xufVxuLmNhcmRncm91cF9fY29udGFpbmVyLS10aXRsZSA+ICo6Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4tdG9wOiAwO1xufVxuLmNhcmRncm91cF9fY29udGFpbmVyLS10aXRsZSA+ICo6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG4uY2FyZGdyb3VwX19jb250YWluZXItLWNvbnRlbnQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZmZmO1xuICBwYWRkaW5nLXRvcDogMnJlbTtcbn1cbi5jYXJkZ3JvdXBfX2NvbnRhaW5lci0tbWVkaWEge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgei1pbmRleDogMTtcbn1cbi5jYXJkZ3JvdXBfX2NvbnRhaW5lci0tbWVkaWEgPiBwaWN0dXJlID4gaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIG9iamVjdC1wb3NpdGlvbjogY2VudGVyO1xufVxuXG4uY2FyZGdyb3VwaXRlbSB7XG4gIGZsZXg6IDEgMSBjYWxjKDUwJSAtIDFyZW0pO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC5jYXJkZ3JvdXBpdGVtIHtcbiAgICBmbGV4OiAxIDEgY2FsYygyNSUgLSAxcmVtKTtcbiAgfVxufVxuLmNhcmRncm91cGl0ZW1fX3RpdGxlLCAuY2FyZGdyb3VwaXRlbV9fY29udGVudCB7XG4gIGNvbG9yOiAjZmZmO1xufVxuLmNhcmRncm91cGl0ZW1fX3RpdGxlIHtcbiAgZm9udC1zaXplOiAxLjVyZW07XG59XG4uY2FyZGdyb3VwaXRlbV9fY29udGVudCB7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbn1cblxuLmNvbHVtbnMge1xuICBjb250ZW50LXZpc2liaWxpdHk6IGF1dG87XG4gIGNvbnRhaW4taW50cmluc2ljLXNpemU6IDUwMHB4O1xufVxuLmNvbHVtbnMgLmNvbHVtbnNfX2NvbnRhaW5lciB7XG4gIGdhcDogMXJlbSAxcmVtO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHdpZHRoOiAxMDAlO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDYwMHB4KSB7XG4gIC5jb2x1bW5zIC5jb2x1bW5zX19jb250YWluZXIge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIH1cbn1cbi5jb2x1bW5zIC5jb2x1bW5zX19jb250YWluZXIgLmNvbHVtbiB7XG4gIHdpZHRoOiAxMDAlO1xufVxuLmNvbHVtbnMgLmNvbHVtbnNfX2NvbnRhaW5lciAuY29sdW1uID4gKjpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi10b3A6IDA7XG59XG4uY29sdW1ucyAuY29sdW1uc19fY29udGFpbmVyIC5jb2x1bW4gPiAqOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IGNhbGMoNjAwcHggLSAxKSkge1xuICAuY29sdW1ucy5jb2x1bW5zX19yZXZlcnNlIC5jb2x1bW5zX19jb250YWluZXIge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDYwMHB4KSB7XG4gIC5jb2x1bW5zLmNvbHVtbnNfX2NvdW50LS0yIC5jb2x1bW5zX19jb250YWluZXIgLmNvbHVtbiB7XG4gICAgd2lkdGg6IGNhbGMoNTAlIC0gKDFyZW0gLyAyKSk7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA2MDBweCkge1xuICAuY29sdW1ucy5jb2x1bW5zX19jb3VudC0tMi5jb2x1bW5zX19vZmZzZXQtLTYwNDAgLmNvbHVtbnNfX2NvbnRhaW5lciAuY29sdW1uOm50aC1jaGlsZChvZGQpIHtcbiAgICB3aWR0aDogY2FsYyg2MCUgLSAoMXJlbSAvIDIpKTtcbiAgfVxuICAuY29sdW1ucy5jb2x1bW5zX19jb3VudC0tMi5jb2x1bW5zX19vZmZzZXQtLTYwNDAgLmNvbHVtbnNfX2NvbnRhaW5lciAuY29sdW1uOm50aC1jaGlsZChldmVuKSB7XG4gICAgd2lkdGg6IGNhbGMoNDAlIC0gKDFyZW0gLyAyKSk7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA2MDBweCkge1xuICAuY29sdW1ucy5jb2x1bW5zX19jb3VudC0tMi5jb2x1bW5zX19vZmZzZXQtLTQwNjAgLmNvbHVtbnNfX2NvbnRhaW5lciAuY29sdW1uOm50aC1jaGlsZChvZGQpIHtcbiAgICB3aWR0aDogY2FsYyg0MCUgLSAoMXJlbSAvIDIpKTtcbiAgfVxuICAuY29sdW1ucy5jb2x1bW5zX19jb3VudC0tMi5jb2x1bW5zX19vZmZzZXQtLTQwNjAgLmNvbHVtbnNfX2NvbnRhaW5lciAuY29sdW1uOm50aC1jaGlsZChldmVuKSB7XG4gICAgd2lkdGg6IGNhbGMoNjAlIC0gKDFyZW0gLyAyKSk7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA2MDBweCkge1xuICAuY29sdW1ucy5jb2x1bW5zX19jb3VudC0tMyAuY29sdW1uc19fY29udGFpbmVyIC5jb2x1bW4ge1xuICAgIHdpZHRoOiBjYWxjKDMzLjMzMyUgLSAxNHB4KTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDYwMHB4KSB7XG4gIC5jb2x1bW5zLmNvbHVtbnNfX2NvdW50LS00IC5jb2x1bW5zX19jb250YWluZXIgLmNvbHVtbiB7XG4gICAgd2lkdGg6IGNhbGMoMjUlIC0gMTVweCk7XG4gIH1cbn1cblxuLmN0YSB7XG4gIGNvbnRlbnQtdmlzaWJpbGl0eTogYXV0bztcbiAgY29udGFpbi1pbnRyaW5zaWMtc2l6ZTogNTAwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbiAgcGFkZGluZy10b3A6IDJyZW07XG4gIHBhZGRpbmctYm90dG9tOiAycmVtO1xufVxuLmN0YS5jdGFfX3RleHQtLWxlZnQgLmN0YV9fY29udGFpbmVyIHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuLmN0YS5jdGFfX3RleHQtLXJpZ2h0IC5jdGFfX2NvbnRhaW5lciB7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuLmN0YS5jdGFfX3RleHQtLWNlbnRlciAuY3RhX19jb250YWluZXIge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmN0YV9fY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAyO1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxNDAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiA0cmVtIDA7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTYwMHB4KSB7XG4gIC5jdGFfX2NvbnRhaW5lciB7XG4gICAgcGFkZGluZy10b3A6IDZyZW07XG4gICAgcGFkZGluZy1ib3R0b206IDZyZW07XG4gIH1cbn1cbi5jdGEgLmN0YV9fY29udGFpbmVyLS1tZWRpYSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICB6LWluZGV4OiAxO1xufVxuLmN0YSAuY3RhX19jb250YWluZXItLW1lZGlhIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBvYmplY3QtcG9zaXRpb246IGNlbnRlcjtcbn1cbi5jdGFfX2NvbHVtbiB7XG4gIGZsZXg6IDAgMCAxMDAlO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDYwMHB4KSB7XG4gIC5jdGFfX2NvbHVtbiB7XG4gICAgZmxleC1iYXNpczogNzUlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5jdGFfX2NvbHVtbiB7XG4gICAgZmxleC1iYXNpczogNTAlO1xuICB9XG59XG4uY3RhX19jb2x1bW4gPiAqOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbi5jdGFfX2NvbHVtbiA+ICo6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG4uY3RhX19jb2x1bW4gLmN0YV9faGVhZGluZyxcbi5jdGFfX2NvbHVtbiBwIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbnNlY3Rpb24udGVzdGltb25pYWxzIHtcbiAgbWF4LXdpZHRoOiA3NDBweDtcbn1cblxuLnRlc3RpbW9uaWFscyB7XG4gIGNvbnRlbnQtdmlzaWJpbGl0eTogYXV0bztcbiAgY29udGFpbi1pbnRyaW5zaWMtc2l6ZTogNTAwcHg7XG59XG4udGVzdGltb25pYWxzX19pdGVtIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLnRlc3RpbW9uaWFsc19faXRlbSBibG9ja3F1b3RlIHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbn1cbi50ZXN0aW1vbmlhbHNfX2l0ZW0gYmxvY2txdW90ZSA+IHAge1xuICBmb250LXNpemU6IDEuNzVyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjI7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG4udGVzdGltb25pYWxzX19pdGVtIGZpZ2NhcHRpb24ge1xuICBmb250LXNpemU6IDEuMjVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xufVxuLnRlc3RpbW9uaWFsc19fY29udGFpbmVyIHtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbn1cbi50ZXN0aW1vbmlhbHNfX3BhZ2luYXRpb24ge1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IGNhbGMoMXJlbSAvIDIpO1xufVxuLnRlc3RpbW9uaWFsc19fcGFnaW5hdGlvbi0tcGFnZSB7XG4gIGhlaWdodDogMjVweDtcbiAgd2lkdGg6IDI1cHg7XG59XG5cbi5wYW5lbCAudGVzdGltb25pYWxzIHtcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbn1cblxuLmZhcSB7XG4gIGNvbnRlbnQtdmlzaWJpbGl0eTogYXV0bztcbiAgY29udGFpbi1pbnRyaW5zaWMtc2l6ZTogNTAwcHg7XG59XG4uZmFxX19jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDc0MHB4O1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufVxuLmZhcV9faXRlbXMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBnYXA6IDFyZW0gMDtcbn1cbi5mYXFfX3F1ZXN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogbm9uZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDFyZW07XG4gIHBhZGRpbmctcmlnaHQ6IDU0cHg7XG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjVmNjtcbiAgd2lkdGg6IDEwMCU7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmZhcV9fcXVlc3Rpb246YmVmb3JlLCAuZmFxX19xdWVzdGlvbjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTYxNjE2O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG4uZmFxX19xdWVzdGlvbjpiZWZvcmUge1xuICBoZWlnaHQ6IDI0cHg7XG4gIHdpZHRoOiA0cHg7XG4gIHJpZ2h0OiAyNnB4O1xuICB0b3A6IDFyZW07XG59XG4uZmFxX19xdWVzdGlvbjphZnRlciB7XG4gIHdpZHRoOiAyNHB4O1xuICBoZWlnaHQ6IDRweDtcbiAgcmlnaHQ6IDFyZW07XG4gIHRvcDogMjZweDtcbn1cbi5mYXFfX3F1ZXN0aW9uLmZhcV9fb3BlbiArIC5mYXFfX2Fuc3dlciB7XG4gIGhlaWdodDogYXV0bztcbiAgcGFkZGluZzogMXJlbTtcbn1cbi5mYXFfX3F1ZXN0aW9uLmZhcV9fb3BlbjpiZWZvcmUge1xuICBkaXNwbGF5OiBub25lO1xufVxuLmZhcV9fYW5zd2VyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcGFkZGluZy1sZWZ0OiAxcmVtO1xuICBwYWRkaW5nLXJpZ2h0OiAxcmVtO1xufVxuXG4uYnJhbmQxIC5mYXFfX2l0ZW0sXG4uYnJhbmQyIC5mYXFfX2l0ZW0ge1xuICBjb2xvcjogI2ZmZjtcbn1cbi5icmFuZDEgLmZhcV9fcXVlc3Rpb24sXG4uYnJhbmQyIC5mYXFfX3F1ZXN0aW9uIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5icmFuZDIgLmZhcV9fcXVlc3Rpb24ge1xuICBjb2xvcjogIzE2MTYxNjtcbn1cblxuLmJyYW5kNCAuZmFxX19xdWVzdGlvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gIGNvbG9yOiAjZmZmO1xufVxuLmJyYW5kNCAuZmFxX19xdWVzdGlvbjpiZWZvcmUsIC5icmFuZDQgLmZhcV9fcXVlc3Rpb246YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xufVxuXG4uYnJhbmQxIC5mYXFfX3F1ZXN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbn1cbi5icmFuZDEgLmZhcV9fcXVlc3Rpb246YmVmb3JlLCAuYnJhbmQxIC5mYXFfX3F1ZXN0aW9uOmFmdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cblxuLmZlZWQge1xuICBjb250ZW50LXZpc2liaWxpdHk6IGF1dG87XG4gIGNvbnRhaW4taW50cmluc2ljLXNpemU6IDgwMHB4O1xufVxuLmZlZWRfX2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGdhcDogMXJlbTtcbn1cblxuLm5ld3NfX2l0ZW0ge1xuICBmbGV4OiAxIDEgY2FsYyg1MCUgLSAoMXJlbSAvIDIpKTtcbn1cbi5uZXdzX19pdGVtLS1tZWRpYSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5uZXdzX19pdGVtLS1tZWRpYTpiZWZvcmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29udGVudDogXCJcIjtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmctdG9wOiA3NSU7XG59XG4ubmV3c19faXRlbS0tbWVkaWEgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIG9iamVjdC1wb3NpdGlvbjogY2VudGVyO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbn1cblxuLmZpeGVkc3BhY2VyIHtcbiAgY29udGVudC12aXNpYmlsaXR5OiBhdXRvO1xuICBjb250YWluLWludHJpbnNpYy1zaXplOiA0MDBweDtcbiAgaGVpZ2h0OiA0cmVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuZml4ZWRzcGFjZXIge1xuICAgIGhlaWdodDogOHJlbTtcbiAgfVxufVxuXG4uZmxleGkge1xuICBjb250ZW50LXZpc2liaWxpdHk6IGF1dG87XG4gIGNvbnRhaW4taW50cmluc2ljLXNpemU6IDgwMHB4O1xufVxuLmZsZXhpX19oYXNiZ2NvbG9yIHtcbiAgcGFkZGluZy10b3A6IDJyZW07XG4gIHBhZGRpbmctYm90dG9tOiAycmVtO1xuICB3aWR0aDogMTAwdncgIWltcG9ydGFudDtcbiAgdHJhbnNmb3JtOiBub25lICFpbXBvcnRhbnQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGVmdDogNTAlO1xuICByaWdodDogNTAlO1xuICBtYXJnaW4tbGVmdDogLTUwdnc7XG4gIG1hcmdpbi1yaWdodDogLTUwdnc7XG59XG4uZmxleGlfX2hhc2JnY29sb3IgLmZsZXhpX19jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDRyZW0gMnJlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA2MDBweCkge1xuICAuZmxleGlfX2hhc2JnY29sb3IgLmZsZXhpX19jb250YWluZXIge1xuICAgIG1heC13aWR0aDogNjAwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAuZmxleGlfX2hhc2JnY29sb3IgLmZsZXhpX19jb250YWluZXIge1xuICAgIG1heC13aWR0aDogOTkycHg7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmZsZXhpX19oYXNiZ2NvbG9yIC5mbGV4aV9fY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDEwMjRweDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDE2MDBweCkge1xuICAuZmxleGlfX2hhc2JnY29sb3IgLmZsZXhpX19jb250YWluZXIge1xuICAgIG1heC13aWR0aDogMTYwMHB4O1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTYwMHB4KSB7XG4gIC5mbGV4aV9faGFzYmdjb2xvciAuZmxleGlfX2NvbnRhaW5lciB7XG4gICAgcGFkZGluZy10b3A6IDZyZW07XG4gICAgcGFkZGluZy1ib3R0b206IDZyZW07XG4gIH1cbn1cbi5mbGV4aV9faGFzYmdjb2xvci0tYnJhbmQxIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE2MTYxNjtcbiAgY29sb3I6ICNmZmY7XG59XG4uZmxleGlfX2hhc2JnY29sb3ItLWJyYW5kMiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gIGNvbG9yOiAjZmZmO1xufVxuLmZsZXhpX19oYXNiZ2NvbG9yLS1icmFuZDMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICBjb2xvcjogIzE2MTYxNjtcbn1cbi5mbGV4aV9faGFzYmdjb2xvci0tYnJhbmQ0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjVmNjtcbiAgY29sb3I6ICMxNjE2MTY7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmZsZXhpLmltYWdlc19fbGVmdCAuZmxleGlfX2NvbnRhaW5lciB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmZsZXhpLmltYWdlc19fcmlnaHQgLmZsZXhpX19jb250YWluZXIge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIH1cbn1cbi5mbGV4aV9fY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xufVxuLmZsZXhpX19jb2x1bW4ge1xuICBmbGV4OiAxIDAgMzMuMzMzJTtcbiAgbWF4LXdpZHRoOiA1MCU7XG4gIHBhZGRpbmc6IDAgMTBweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAuZmxleGlfX2NvbHVtbjpudGgtY2hpbGQoMSkge1xuICAgIGZsZXg6IDAgMCAxMDAlO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgfVxufVxuLmZsZXhpX19jb2x1bW4tLW1lZGlhIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBvYmplY3QtcG9zaXRpb246IGNlbnRlcjtcbn1cblxuc2VjdGlvbi5oZXJvIHtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICBwYWRkaW5nLXJpZ2h0OiAwO1xuICBoZWlnaHQ6IDEwMHZoO1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG4uaGVybyB7XG4gIGNvbnRlbnQtdmlzaWJpbGl0eTogYXV0bztcbiAgY29udGFpbi1pbnRyaW5zaWMtc2l6ZTogODAwcHg7XG59XG4uaGVyb19fY29udGFpbmVyLS1jb250ZW50IHtcbiAgY29sb3I6ICNmZmY7XG4gIG1heC13aWR0aDogMTQwMHB4O1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBwYWRkaW5nLWxlZnQ6IDJyZW07XG4gIHBhZGRpbmctcmlnaHQ6IDJyZW07XG4gIGhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5oZXJvIC5oZXJvX19zbGlkZSB7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmhlcm8gLmhlcm9fX3NsaWRlLS1jb250ZW50IHtcbiAgei1pbmRleDogMTtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbn1cbi5oZXJvIC5oZXJvX19zbGlkZS0tbWVkaWEge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xufVxuLmhlcm8gLmhlcm9fX3NsaWRlLS1tZWRpYSBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXI7XG59XG4uaGVybyAuaGVyb19fdHJhY2ssXG4uaGVybyAuaGVyb19fbGlzdCB7XG4gIGhlaWdodDogaW5oZXJpdDtcbn1cblxuZGl2LnBhbmVsIHtcbiAgcGFkZGluZy10b3A6IDJyZW07XG4gIHBhZGRpbmctYm90dG9tOiAycmVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICBkaXYucGFuZWwge1xuICAgIHBhZGRpbmctdG9wOiA0cmVtO1xuICAgIHBhZGRpbmctYm90dG9tOiA0cmVtO1xuICB9XG59XG5cbmRpdi5wYW5lbCB7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cbmRpdi5wYW5lbC5icmFuZDEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTYxNjE2O1xuICBjb2xvcjogI2ZmZjtcbn1cbmRpdi5wYW5lbC5icmFuZDIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xuICBjb2xvcjogI2ZmZjtcbn1cbmRpdi5wYW5lbC5icmFuZDMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xufVxuZGl2LnBhbmVsLmJyYW5kNCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMmY1ZjY7XG59XG5kaXYucGFuZWxfX2NvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMTQwMHB4O1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufVxuZGl2LnBhbmVsX19jb250YWluZXIgPiAqOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbmRpdi5wYW5lbF9fY29udGFpbmVyID4gKjpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLnBhcnRuZXJzIHtcbiAgY29udGVudC12aXNpYmlsaXR5OiBhdXRvO1xuICBjb250YWluLWludHJpbnNpYy1zaXplOiA4MDBweDtcbn1cbi5wYXJ0bmVyc19fY29udGFpbmVyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIG1heC13aWR0aDogMTQwMHB4O1xufVxuLnBhcnRuZXJzX19pdGVtcyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZ2FwOiAxcmVtO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLnBhcnRuZXJzX19pdGVtIHtcbiAgd2lkdGg6IGNhbGMoNTAlIC0gKDFyZW0gLyAyKSk7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNjAwcHgpIHtcbiAgLnBhcnRuZXJzX19pdGVtIHtcbiAgICB3aWR0aDogY2FsYygyNSUgLSAxMnB4KTtcbiAgfVxufVxuLnBhcnRuZXJzX19pdGVtIGEge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5wYXJ0bmVyc19faXRlbSBhOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLnBhcnRuZXJzX19pdGVtIGE6aG92ZXIgaW1nIHtcbiAgb3BhY2l0eTogMC41O1xufVxuLnBhcnRuZXJzX19pdGVtIGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3M7XG59XG5cbi5wcm9tb2dyb3VwIHtcbiAgY29udGVudC12aXNpYmlsaXR5OiBhdXRvO1xuICBjb250YWluLWludHJpbnNpYy1zaXplOiA4MDBweDtcbn1cbi5wcm9tb2dyb3VwX19zdGFja2VkIC5wcm9tb2dyb3VwaXRlbSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuLnByb21vZ3JvdXBfX3N0YWNrZWQgLnByb21vZ3JvdXBpdGVtIC5wcm9tb2dyb3VwaXRlbV9fY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbn1cbi5wcm9tb2dyb3VwX19zdGFja2VkIC5wcm9tb2dyb3VwaXRlbSAucHJvbW9ncm91cGl0ZW1fX21lZGlhIHtcbiAgZmxleDogMCAwIDQwJTtcbn1cbi5wcm9tb2dyb3VwX19zdGFja2VkIC5wcm9tb2dyb3VwaXRlbSAucHJvbW9ncm91cGl0ZW1fX3RleHQge1xuICBmbGV4OiAxIDEgYXV0bztcbiAgcGFkZGluZy1sZWZ0OiAxcmVtO1xufVxuLnByb21vZ3JvdXBfX2NvbHVtbnMucHJvbW9ncm91cF9fY29sdW1ucy0tMiAucHJvbW9ncm91cF9fY29udGFpbmVyLS1jb250ZW50IC5wcm9tb2dyb3VwaXRlbSB7XG4gIHdpZHRoOiBjYWxjKDUwJSAtICgxcmVtIC8gMikpO1xufVxuLnByb21vZ3JvdXBfX2NvbHVtbnMucHJvbW9ncm91cF9fY29sdW1ucy0tMyAucHJvbW9ncm91cF9fY29udGFpbmVyLS1jb250ZW50IC5wcm9tb2dyb3VwaXRlbSB7XG4gIHdpZHRoOiBjYWxjKDUwJSAtICgxcmVtIC8gMikpO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAucHJvbW9ncm91cF9fY29sdW1ucy5wcm9tb2dyb3VwX19jb2x1bW5zLS0zIC5wcm9tb2dyb3VwX19jb250YWluZXItLWNvbnRlbnQgLnByb21vZ3JvdXBpdGVtIHtcbiAgICB3aWR0aDogY2FsYygzMy4zMzMlIC0gMTFweCk7XG4gIH1cbn1cbi5wcm9tb2dyb3VwX19jb2x1bW5zLnByb21vZ3JvdXBfX2NvbHVtbnMtLTQgLnByb21vZ3JvdXBfX2NvbnRhaW5lci0tY29udGVudCAucHJvbW9ncm91cGl0ZW0ge1xuICB3aWR0aDogY2FsYyg1MCUgLSAoMXJlbSAvIDIpKTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLnByb21vZ3JvdXBfX2NvbHVtbnMucHJvbW9ncm91cF9fY29sdW1ucy0tNCAucHJvbW9ncm91cF9fY29udGFpbmVyLS1jb250ZW50IC5wcm9tb2dyb3VwaXRlbSB7XG4gICAgd2lkdGg6IGNhbGMoMjUlIC0gMTJweCk7XG4gIH1cbn1cbi5wcm9tb2dyb3VwIC5wcm9tb2dyb3VwX19jb250YWluZXItLWNvbnRlbnQge1xuICBnYXA6IDFyZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbn1cbi5wcm9tb2dyb3VwIC5wcm9tb2dyb3VwX19jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxNDAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuLnByb21vZ3JvdXAgLnByb21vZ3JvdXBpdGVtIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjVmNjtcbn1cbi5wcm9tb2dyb3VwIC5wcm9tb2dyb3VwaXRlbSAucHJvbW9ncm91cGl0ZW1fX3RleHQge1xuICBwYWRkaW5nOiAxcmVtO1xufVxuLnByb21vZ3JvdXAgLnByb21vZ3JvdXBpdGVtIC5wcm9tb2dyb3VwaXRlbV9fdGl0bGUge1xuICBtYXJnaW4tdG9wOiAwLjVyZW07XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLnByb21vZ3JvdXAgLnByb21vZ3JvdXBpdGVtIC5wcm9tb2dyb3VwaXRlbV9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICB9XG59XG4ucHJvbW9ncm91cCAucHJvbW9ncm91cGl0ZW0gLnByb21vZ3JvdXBpdGVtX19jb250ZW50IHtcbiAgbWFyZ2luLXRvcDogMC41cmVtO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICBmb250LXNpemU6IDFyZW07XG59XG5cbi5wcm9tb2dyb3VwaXRlbV9fbWVkaWEgaW1nIHtcbiAgYXNwZWN0LXJhdGlvOiA0LzM7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBvYmplY3QtcG9zaXRpb246IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbn1cblxuZmlndXJlLnF1b3RlIHtcbiAgY29udGVudC12aXNpYmlsaXR5OiBhdXRvO1xuICBjb250YWluLWludHJpbnNpYy1zaXplOiA4MDBweDtcbiAgbWF4LXdpZHRoOiA3NDBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuZmlndXJlLnF1b3RlIGJsb2NrcXVvdGUge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuZmlndXJlLnF1b3RlIGJsb2NrcXVvdGUgPiBwIHtcbiAgZm9udC1zaXplOiAxLjc1cmVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICBsaW5lLWhlaWdodDogMS4yO1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuZmlndXJlLnF1b3RlIGZpZ2NhcHRpb24ge1xuICBmb250LXNpemU6IDEuMjVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xufVxuXG4ucGFuZWwgLnF1b3RlIHtcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbn1cblxuaHIuc2VwYXJhdG9yIHtcbiAgY29udGVudC12aXNpYmlsaXR5OiBhdXRvO1xuICBjb250YWluLWludHJpbnNpYy1zaXplOiAxMDBweDtcbiAgbWF4LXdpZHRoOiA3NDBweDtcbiAgaGVpZ2h0OiAycHg7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLnBhbmVsLmJyYW5kMSBoci5zZXBhcmF0b3Ige1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmNWY2O1xufVxuLnBhbmVsLmJyYW5kMiBoci5zZXBhcmF0b3Ige1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTYxNjE2O1xufVxuXG4uc2l0ZXNlYXJjaCB7XG4gIGNvbnRlbnQtdmlzaWJpbGl0eTogYXV0bztcbiAgY29udGFpbi1pbnRyaW5zaWMtc2l6ZTogNDAwcHg7XG59XG4uc2l0ZXNlYXJjaF9fY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogNzQwcHg7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG4uc2l0ZXNlYXJjaF9fY29udGFpbmVyIGZvcm0ge1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyOiAxcHggc29saWQgIzMzMztcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLnNpdGVzZWFyY2hfX2NvbnRhaW5lciBmb3JtIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG59XG4uc2l0ZXNlYXJjaF9fY29udGFpbmVyIGlucHV0IHtcbiAgcGFkZGluZzogMCAxcmVtO1xuICBoZWlnaHQ6IDYwcHg7XG59XG4uc2l0ZXNlYXJjaF9fZmllbGQge1xuICBib3JkZXI6IG5vbmU7XG4gIHdpZHRoOiAxMDAlO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuc2l0ZXNlYXJjaF9fZmllbGQge1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gMTc1cHgpO1xuICB9XG59XG4uc2l0ZXNlYXJjaF9fc3VibWl0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogbm9uZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuc2l0ZXNlYXJjaF9fc3VibWl0IHtcbiAgICB3aWR0aDogMTc1cHg7XG4gIH1cbn1cblxuLnBvc3RsaXN0IHtcbiAgcGFkZGluZy10b3A6IDRyZW07XG59XG4ucG9zdGxpc3RfX2l0ZW1zIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZ2FwOiAxcmVtO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAucG9zdGxpc3RfX2l0ZW1zIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgfVxufVxuXG4uZmlsdGVycyB7XG4gIHBhZGRpbmctdG9wOiAxcmVtO1xuICBwYWRkaW5nLWJvdHRvbTogMXJlbTtcbn1cblxuLnBvc3RjYXJkIHtcbiAgZmxleDogMCAxIDEwMCU7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNjAwcHgpIHtcbiAgLnBvc3RjYXJkIHtcbiAgICBmbGV4LWJhc2lzOiBjYWxjKDUwJSAtICgxcmVtIC8gMikpO1xuICB9XG59XG4ucG9zdGNhcmRfX21lZGlhIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuLnBvc3RjYXJkX19tZWRpYTpiZWZvcmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29udGVudDogXCJcIjtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmctdG9wOiBjYWxjKCgzIC8gNSkgKiAxMDAlKTtcbn1cbi5wb3N0Y2FyZF9fbWVkaWEgaW1nIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG59XG4ucG9zdGNhcmRfX21lZGlhIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBvYmplY3QtcG9zaXRpb246IGNlbnRlcjtcbn1cbi5wb3N0Y2FyZF9fY29udGVudCA+ICo6Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4tdG9wOiAwO1xufVxuLnBvc3RjYXJkX19jb250ZW50ID4gKjpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLmZvb3RlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxNjE2MTY7XG4gIHBhZGRpbmc6IDFyZW07XG4gIGNvbG9yOiAjZmZmO1xufVxuLmZvb3Rlcl9fY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAxNDAwcHg7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5mb290ZXJfX2NvbnRhaW5lciB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgfVxufVxuLmZvb3Rlcl9fY29udGFpbmVyID4gKiB7XG4gIGZsZXg6IDEgMSAwO1xufVxuXG4uZm9vdGVybmF2aWdhdGlvbiB1bCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cbi5mb290ZXJuYXZpZ2F0aW9uIHVsIGxpIGEge1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uc29jaWFsbWVkaWEgdWwge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG4uc29jaWFsbWVkaWEgdWwgbGkgYSB7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5jb250YWN0bWV0aG9kcyB1bCB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cbi5jb250YWN0bWV0aG9kcyB1bCBsaSBhIHtcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbi5jb250YWN0bWV0aG9kcyBhZGRyZXNzIHtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufSIsIjpyb290IHtcbiAgICBmb250LXNpemU6IDE2cHg7XG59XG5cbioge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmJvZHkge1xuICAgIGZvbnQtZmFtaWx5OiAkc2Fuc1NlcmlmO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgcGFkZGluZy10b3A6ICRzcGFjaW5nICogNTtcbn1cblxuLmNvbnRhaW5lciB7XG4gICAgJl9fbWFpbiB7XG4gICAgICAgID4qIHtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogJHNwYWNpbmcgKiAyO1xuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogJHNwYWNpbmcgKiAyO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAkY29udGFpbmVyO1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgICAgICAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jb250YWluZXJfX2Z1bGwge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4ubWFyZ2lucyB7XG4gICAgJl9fdG9wQm90dG9tIHtcbiAgICAgICAgbWFyZ2luLXRvcDogJHNwYWNpbmcgKjI7XG4gICAgICAgIG1hcmdpbi1ib3R0b206ICRzcGFjaW5nICogMjtcblxuICAgICAgICBAaW5jbHVkZSBkZXNrdG9wIHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6ICRzcGFjaW5nICogNDtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICRzcGFjaW5nICogNDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX3RvcCB7XG4gICAgICAgIG1hcmdpbi10b3A6ICRzcGFjaW5nICoyO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuXG4gICAgICAgIEBpbmNsdWRlIGRlc2t0b3Age1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogJHNwYWNpbmcgKiA0O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJl9fYm90dG9tIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogJHNwYWNpbmcgKiAyO1xuXG4gICAgICAgIEBpbmNsdWRlIGRlc2t0b3Age1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogJHNwYWNpbmcgKiA0O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJl9fbm9uZSB7XG4gICAgICAgIG1hcmdpbi10b3A6IDAhaW1wb3J0YW50O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICAmX19pbkNvbnRlbnQge1xuICAgICAgICBtYXJnaW4tdG9wOiBjYWxjKCN7JHNwYWNpbmd9IC8gMik7XG4gICAgICAgIG1hcmdpbi1ib3R0b206ICRzcGFjaW5nO1xuICAgIH1cblxuICAgICZfX2RvdWJsZSB7XG4gICAgICAgICYubWFyZ2luc19fdG9wQm90dG9tIHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6ICRzcGFjaW5nICogNDtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICRzcGFjaW5nICogNDtcblxuICAgICAgICAgICAgQGluY2x1ZGUgZGVza3RvcCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogJHNwYWNpbmcgKiA4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICRzcGFjaW5nICogODtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICYubWFyZ2luc19fdG9wIHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6ICRzcGFjaW5nICogNDtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG5cbiAgICAgICAgICAgIEBpbmNsdWRlIGRlc2t0b3Age1xuICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6ICRzcGFjaW5nICogODtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICYubWFyZ2luc19fYm90dG9tIHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAkc3BhY2luZyAqIDQ7XG5cbiAgICAgICAgICAgIEBpbmNsdWRlIGRlc2t0b3Age1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICRzcGFjaW5nICogODtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLmNvbnRlbnQge1xuICAgICZfX25hcnJvdyB7XG4gICAgICAgIHdpZHRoOiA4MCU7XG4gICAgICAgIG1heC13aWR0aDogJG5hcnJvdztcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICB9XG59IiwiJHNwYWNpbmc6IDFyZW07XG5cbiRzYW5zU2VyaWY6ICdQb3BwaW5zJywgc2Fucy1zZXJpZjtcblxuJGJyZWFrcG9pbnREZXNrdG9wTGFyZ2U6IDE2MDBweDtcbiRicmVha3BvaW50RGVza3RvcDogMTAyNHB4O1xuJGJyZWFrcG9pbnRUYWJsZXRMYXJnZTogOTkycHg7XG4kYnJlYWtwb2ludElwYWQ6IDc2OHB4O1xuJGJyZWFrcG9pbnRUYWJsZXQ6IDYwMHB4O1xuJGJyZWFrcG9pbnRJcGhvbmU1OiAzNzVweDtcblxuJGJyYW5kMTogIzE2MTYxNjtcbiRicmFuZDI6ICMzMzM7XG4kYnJhbmQzOiAjZmZmZmZmO1xuJGJyYW5kNDogI2YyZjVmNjtcblxuJGgxTW9iaWxlOiAyLjVyZW07XG4kaDE6IDNyZW07XG4kaDJNb2JpbGU6IDJyZW07XG4kaDI6IDIuNXJlbTtcbiRoM01vYmlsZTogMS41cmVtO1xuJGgzOiAycmVtO1xuJGg0TW9iaWxlOiAxLjI1cmVtO1xuJGg0OiAxLjc1cmVtO1xuJGg1TW9iaWxlOiAxLjJyZW07XG4kaDU6IDEuNXJlbTtcbiRoNjogMS4yNXJlbTtcblxuJGhlYWRpbmdDYXRlZ29yeTogMS4yNXJlbTtcbiRoZWFkaW5nTWFpbjogMi41cmVtO1xuJGhlYWRpbmdTdWI6IDEuNXJlbTtcblxuJGNvbnRhaW5lcjogMTQwMHB4O1xuJG5hcnJvdzogNzQwcHg7IiwiQG1peGluIGlwaG9uZTUtb25seSB7XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6ICRicmVha3BvaW50SXBob25lNSkgeyBAY29udGVudDsgfVxufVxuXG5AbWl4aW4gdGFibGV0TGFyZ2Uge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkYnJlYWtwb2ludFRhYmxldExhcmdlKSB7IEBjb250ZW50OyB9XG59XG5cbkBtaXhpbiB0YWJsZXQge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkYnJlYWtwb2ludFRhYmxldCkgeyBAY29udGVudDsgfVxufVxuXG5AbWl4aW4gaXBhZCB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRicmVha3BvaW50SXBhZCkgeyBAY29udGVudDsgfVxufVxuXG5AbWl4aW4gZGVza3RvcCB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRicmVha3BvaW50RGVza3RvcCkgeyBAY29udGVudDsgfVxufVxuXG5AbWl4aW4gZGVza3RvcExhcmdlIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJGJyZWFrcG9pbnREZXNrdG9wTGFyZ2UpIHsgQGNvbnRlbnQ7IH1cbn1cblxuQG1peGluIGFzcGVjdFJhdGlvKCR3aWR0aCwgJGhlaWdodCkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJjpiZWZvcmUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZy10b3A6IGNhbGMoKCN7JGhlaWdodH0gLyAjeyR3aWR0aH0pICogMTAwJSk7XG4gIH1cblxuICBpbWcge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IDA7XG4gIH1cblxufSIsIiVoZWFkaW5nX19zdHlsZXMge1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgbWFyZ2luLXRvcDogY2FsYygjeyRzcGFjaW5nfSAvIDIpO1xuICAgIG1hcmdpbi1ib3R0b206ICRzcGFjaW5nO1xufVxuXG5oMSB7XG4gICAgQGV4dGVuZCAlaGVhZGluZ19fc3R5bGVzO1xuICAgIGZvbnQtc2l6ZTogJGgxTW9iaWxlO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjM1O1xuXG4gICAgQGluY2x1ZGUgZGVza3RvcCB7XG4gICAgICAgIGZvbnQtc2l6ZTogJGgxO1xuICAgIH1cbn1cblxuaDIge1xuICAgIEBleHRlbmQgJWhlYWRpbmdfX3N0eWxlcztcbiAgICBmb250LXNpemU6ICRoMk1vYmlsZTtcbiAgICBsaW5lLWhlaWdodDogMS4zO1xuXG4gICAgQGluY2x1ZGUgZGVza3RvcCB7XG4gICAgICAgIGZvbnQtc2l6ZTogJGgyO1xuICAgIH1cbn1cblxuaDMge1xuICAgIEBleHRlbmQgJWhlYWRpbmdfX3N0eWxlcztcbiAgICBmb250LXNpemU6ICRoM01vYmlsZTtcbiAgICBsaW5lLWhlaWdodDogMS4yNTtcblxuICAgIEBpbmNsdWRlIGRlc2t0b3Age1xuICAgICAgICBmb250LXNpemU6ICRoMztcbiAgICB9XG59XG5cbmg0IHtcbiAgICBAZXh0ZW5kICVoZWFkaW5nX19zdHlsZXM7XG4gICAgZm9udC1zaXplOiAkaDRNb2JpbGU7XG4gICAgbGluZS1oZWlnaHQ6IDEuMjtcblxuICAgIEBpbmNsdWRlIGRlc2t0b3Age1xuICAgICAgICBmb250LXNpemU6ICRoNDtcbiAgICB9XG59XG5cbmg1IHtcbiAgICBAZXh0ZW5kICVoZWFkaW5nX19zdHlsZXM7XG4gICAgZm9udC1zaXplOiAkaDVNb2JpbGU7XG4gICAgbWFyZ2luLWJvdHRvbTogY2FsYygkc3BhY2luZyAvIDIpO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG5cbiAgICBAaW5jbHVkZSBkZXNrdG9wIHtcbiAgICAgICAgZm9udC1zaXplOiAkaDU7XG4gICAgfVxufVxuXG5oNiB7XG4gICAgQGV4dGVuZCAlaGVhZGluZ19fc3R5bGVzO1xuICAgIGZvbnQtc2l6ZTogJGg2O1xuICAgIG1hcmdpbi1ib3R0b206IGNhbGMoJHNwYWNpbmcgLyAyKTtcbiAgICBsaW5lLWhlaWdodDogMS4xNTtcbn1cblxucCB7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICAgIG1hcmdpbi10b3A6IGNhbGMoI3skc3BhY2luZ30gLyAyKTtcbiAgICBtYXJnaW4tYm90dG9tOiAkc3BhY2luZztcblxuICAgICYuaXMtc3R5bGUtbGVhZCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xuICAgIH1cbn1cblxuLmhhcy10ZXh0LWFsaWduIHtcbiAgICAmLWxlZnQge1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIH1cblxuICAgICYtY2VudGVyIHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cblxuICAgICYtcmlnaHQge1xuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICB9XG59XG5cbnN0cm9uZyB7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuZW0ge1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuYSB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgdGV4dC1kZWNvcmF0aW9uLWNvbG9yOiAkYnJhbmQyO1xuICAgIHRleHQtdW5kZXJsaW5lLW9mZnNldDogMC4yZW07XG4gICAgdGV4dC1kZWNvcmF0aW9uLXRoaWNrbmVzczogMC4xZW07XG4gICAgdHJhbnNpdGlvbjogdGV4dC1kZWNvcmF0aW9uLWNvbG9yIDAuMTVzIGVhc2U7XG4gICAgY29sb3I6ICRicmFuZDI7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uLWNvbG9yOiByZ2JhKCRicmFuZDIsIDAuMjUpO1xuICAgIH1cbn1cblxuJWxpc3RfX3N0eWxlcyB7XG4gICAgbWFyZ2luLXRvcDogY2FsYygjeyRzcGFjaW5nfSAvIDIpO1xuICAgIG1hcmdpbi1ib3R0b206ICRzcGFjaW5nO1xuICAgIHBhZGRpbmctbGVmdDogJHNwYWNpbmcgKiAyO1xufVxuXG51bCB7XG4gICAgQGV4dGVuZCAlbGlzdF9fc3R5bGVzO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG5cbiAgICBsaSB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6IC0yNHB4O1xuICAgICAgICAgICAgdG9wOiA2cHg7XG4gICAgICAgICAgICB3aWR0aDogMTJweDtcbiAgICAgICAgICAgIGhlaWdodDogMTJweDtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRicmFuZDI7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbm9sIHtcbiAgICBAZXh0ZW5kICVsaXN0X19zdHlsZXM7XG59XG5cbi50ZXN0aW5nIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG4gICAgY29sb3I6IGJsdWU7XG5cbiAgICBcbn1cbiIsIi5hbGVydCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJyYW5kNDtcbiAgICBwYWRkaW5nOiBjYWxjKCN7JHNwYWNpbmd9IC8gMikgJHNwYWNpbmc7IFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDkwcHg7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB6LWluZGV4OiAxMDA7XG5cblxuICAgICZfX2NvbnRhaW5lciB7XG4gICAgICAgIG1heC13aWR0aDogJGNvbnRhaW5lcjtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBcbiAgICAgICAgcCB7XG4gICAgICAgICAgICBmb250LXNpemU6IDAuODc1cmVtO1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB9XG4gICAgfVxufSIsIlxuXG4uaGVhZGVybmF2aWdhdGlvbiB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6ICRzcGFjaW5nICogMjtcbiAgICB6LWluZGV4OiAxMDA7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRicmFuZDE7XG4gICAgaGVpZ2h0OiA5MHB4O1xuXG4gICAgJl9fZmx5b3V0IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJyYW5kMTtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcztcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpO1xuXG4gICAgICAgICYtLWNvbnRhaW5lciB7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBwYWRkaW5nOiAkc3BhY2luZyAqIDUgJHNwYWNpbmc7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIG1heC13aWR0aDogJGNvbnRhaW5lcjtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuXG4gICAgICAgICAgICB1bCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcblxuICAgICAgICAgICAgICAgIGxpIHtcbiAgICAgICAgICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHVsIHtcbiAgICAgICAgICAgICAgICAgICAgbGkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAkc3BhY2luZztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgJl9fYnV0dG9uIHtcbiAgICAgICAgJi0tY29udGFpbmVyIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIHotaW5kZXg6IDE7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmX19vcGVuIHtcbiAgICAgICAgLmhlYWRlcm5hdmlnYXRpb25fX2ZseW91dCB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgICAgIH1cbiAgICB9XG59IiwiQGltcG9ydCAnLi4vLi4vc2Fzcy91dGlscy92YXJpYWJsZXMnLFxuICAgICAgICAnLi4vLi4vc2Fzcy91dGlscy9taXhpbnMnO1xuXG5kaXYuYmFubmVyaW1hZ2Uge1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGNvbnRlbnQtdmlzaWJpbGl0eTogYXV0bztcbiAgICBjb250YWluLWludHJpbnNpYy1zaXplOiA2MDBweDtcblxuICAgICZfX21lZGlhIHtcbiAgICAgICAgQGluY2x1ZGUgYXNwZWN0UmF0aW8oMTYsNyk7XG5cbiAgICAgICAgaW1nIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgICAgICBvYmplY3QtcG9zaXRpb246IGNlbnRlcjtcbiAgICAgICAgfVxuICAgIH1cbn0iLCIlcGFkZGluZ19fc3R5bGVzIHtcbiAgICBwYWRkaW5nLXRvcDogJHNwYWNpbmcgKjI7XG4gICAgcGFkZGluZy1ib3R0b206ICRzcGFjaW5nICogMjtcblxuICAgIEBpbmNsdWRlIGRlc2t0b3Age1xuICAgICAgICBwYWRkaW5nLXRvcDogJHNwYWNpbmcgKiA0O1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogJHNwYWNpbmcgKiA0O1xuICAgIH1cbn0iLCJAaW1wb3J0ICcuLi8uLi9zYXNzL3V0aWxzL3ZhcmlhYmxlcycsXG4gICAgICAgICcuLi8uLi9zYXNzL3V0aWxzL21peGlucycsXG4gICAgICAgICcuLi8uLi9zYXNzL3V0aWxzL2V4dGVuZHMnO1xuXG4uY2FsbG91dCB7XG4gICAgY29udGVudC12aXNpYmlsaXR5OiBhdXRvO1xuICAgIGNvbnRhaW4taW50cmluc2ljLXNpemU6IDgwMHB4O1xuICAgIFxuICAgICZfX2NvbnRhaW5lciB7XG4gICAgICAgIG1heC13aWR0aDogOTAwcHg7XG4gICAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgfVxuXG4gICAgJl9fbWVkaWEge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBwYWRkaW5nLXRvcDogY2FsYygoMyAvIDQpICogMTAwJSk7XG4gICAgICAgIH1cblxuICAgICAgICBpbWcge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgICAgICBvYmplY3QtcG9zaXRpb246IGNlbnRlcjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX2NvbnRlbnQge1xuICAgICAgICBwYWRkaW5nLXRvcDogJHNwYWNpbmc7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGdhcDogJHNwYWNpbmc7XG5cbiAgICAgICAgPioge1xuICAgICAgICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgXG4gICAgfVxuXG4gICAgJl9faXRlbSB7XG4gICAgICAgIGZsZXg6IDAgMSBjYWxjKDMzLjMzMyUgLSAxMXB4KTtcblxuICAgICAgICAmLS1jb250ZW50IHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMC44NzVyZW07XG5cbiAgICAgICAgICAgIEBpbmNsdWRlIGRlc2t0b3Age1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn0iLCJAaW1wb3J0ICcuLi8uLi9zYXNzL3V0aWxzL21peGlucycsXG4gICAgICAgICcuLi8uLi9zYXNzL3V0aWxzL3ZhcmlhYmxlcyc7XG5cbi5jYXJkZ3JvdXAge1xuICAgIGNvbnRlbnQtdmlzaWJpbGl0eTogYXV0bztcbiAgICBjb250YWluLWludHJpbnNpYy1zaXplOiA4MDBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nLXRvcDogJHNwYWNpbmcgKiAyO1xuICAgIHBhZGRpbmctYm90dG9tOiAkc3BhY2luZyAqIDI7XG5cbiAgICBAaW5jbHVkZSBkZXNrdG9wTGFyZ2Uge1xuICAgICAgICBwYWRkaW5nLXRvcDogJHNwYWNpbmcgKiA2O1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogJHNwYWNpbmcgKiA2O1xuICAgIH1cblxuICAgICZfX2NvbnRhaW5lciB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgei1pbmRleDogMjtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIG1heC13aWR0aDogJGNvbnRhaW5lcjtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgIGdhcDogJHNwYWNpbmc7ICAgICAgICBcblxuICAgICAgICAmLS10aXRsZSB7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB6LWluZGV4OiAyO1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDgwMHB4O1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAkc3BhY2luZyAqIDI7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgID4qIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjtcblxuICAgICAgICAgICAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJi0tY29udGVudCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNmZmY7XG4gICAgICAgICAgICBwYWRkaW5nLXRvcDogJHNwYWNpbmcgKiAyOyAgICAgICAgICAgIFxuICAgICAgICB9XG5cbiAgICAgICAgJi0tbWVkaWEge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICAgICAgei1pbmRleDogMTtcblxuICAgICAgICAgICAgPnBpY3R1cmUge1xuICAgICAgICAgICAgICAgID5pbWcge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgICAgICAgICAgICAgICAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4uY2FyZGdyb3VwaXRlbSB7XG4gICAgZmxleDogMSAxIGNhbGMoNTAlIC0gI3skc3BhY2luZ30pO1xuXG4gICAgQGluY2x1ZGUgdGFibGV0TGFyZ2Uge1xuICAgICAgICBmbGV4OiAxIDEgY2FsYygyNSUgLSAjeyRzcGFjaW5nfSk7XG4gICAgfVxuXG4gICAgXG4gICAgJl9fdGl0bGUsXG4gICAgJl9fY29udGVudCB7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgIH1cblxuXG4gICAgJl9fdGl0bGUge1xuICAgICAgICBmb250LXNpemU6ICRoNTtcbiAgICB9XG5cbiAgICAmX19jb250ZW50IHtcbiAgICAgICAgZm9udC1zaXplOiAxcmVtO1xuICAgIH1cbn0iLCJAaW1wb3J0ICcuLi8uLi9zYXNzL3V0aWxzL3ZhcmlhYmxlcycsXG4gICAgICAgICcuLi8uLi9zYXNzL3V0aWxzL21peGlucyc7XG5cbi5jb2x1bW5zIHtcbiAgICBjb250ZW50LXZpc2liaWxpdHk6IGF1dG87XG4gICAgY29udGFpbi1pbnRyaW5zaWMtc2l6ZTogNTAwcHg7XG4gICAgXG4gICAgLmNvbHVtbnNfX2NvbnRhaW5lciB7XG4gICAgICAgIGdhcDogMXJlbSAkc3BhY2luZztcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICB3aWR0aDogMTAwJTtcblxuICAgICAgICBAaW5jbHVkZSB0YWJsZXQge1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgfVxuXG4gICAgICAgIC5jb2x1bW4ge1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG5cbiAgICAgICAgICAgID4qIHtcbiAgICAgICAgICAgICAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICAgICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBSZXZlcnNlIENvbHVtbnMgQ29udHJvbFxuICAgICYuY29sdW1uc19fcmV2ZXJzZSB7XG4gICAgICAgIC5jb2x1bW5zX19jb250YWluZXIge1xuICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IGNhbGMoI3skYnJlYWtwb2ludFRhYmxldH0gLSAxKSkge1xuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuXG4gICAgLy8gQ29sdW1ucyBDb3VudFxuICAgICYuY29sdW1uc19fY291bnQtLTIge1xuICAgICAgICAuY29sdW1uc19fY29udGFpbmVyIHtcbiAgICAgICAgICAgIC5jb2x1bW4ge1xuICAgICAgICAgICAgICAgIEBpbmNsdWRlIHRhYmxldCB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiBjYWxjKDUwJSAtICgjeyRzcGFjaW5nfSAvIDIpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBDb2x1bW4gT2Zmc2V0IENvbnRyb2xcbiAgICAgICAgJi5jb2x1bW5zX19vZmZzZXQtLTYwNDAge1xuICAgICAgICAgICAgLmNvbHVtbnNfX2NvbnRhaW5lciB7XG4gICAgICAgICAgICAgICAgLmNvbHVtbiB7XG4gICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIHRhYmxldCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAmOm50aC1jaGlsZChvZGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogY2FsYyg2MCUgLSAoI3skc3BhY2luZ30gLyAyKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAmOm50aC1jaGlsZChldmVuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IGNhbGMoNDAlIC0gKCN7JHNwYWNpbmd9IC8gMikpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJi5jb2x1bW5zX19vZmZzZXQtLTQwNjAge1xuICAgICAgICAgICAgLmNvbHVtbnNfX2NvbnRhaW5lciB7XG4gICAgICAgICAgICAgICAgLmNvbHVtbiB7XG4gICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIHRhYmxldCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAmOm50aC1jaGlsZChvZGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogY2FsYyg0MCUgLSAoI3skc3BhY2luZ30gLyAyKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAmOm50aC1jaGlsZChldmVuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IGNhbGMoNjAlIC0gKCN7JHNwYWNpbmd9IC8gMikpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9IFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICYuY29sdW1uc19fY291bnQtLTMge1xuICAgICAgICAuY29sdW1uc19fY29udGFpbmVyIHtcbiAgICAgICAgICAgIC5jb2x1bW4ge1xuICAgICAgICAgICAgICAgIEBpbmNsdWRlIHRhYmxldCB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiBjYWxjKDMzLjMzMyUgLSAxNHB4KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmLmNvbHVtbnNfX2NvdW50LS00IHtcbiAgICAgICAgLmNvbHVtbnNfX2NvbnRhaW5lciB7XG4gICAgICAgICAgICAuY29sdW1uIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB0YWJsZXQge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogY2FsYygyNSUgLSAxNXB4KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59IiwiQGltcG9ydCAnLi4vLi4vc2Fzcy91dGlscy92YXJpYWJsZXMnLFxuICAgICAgICAnLi4vLi4vc2Fzcy91dGlscy9taXhpbnMnO1xuXG4uY3RhIHtcbiAgICBjb250ZW50LXZpc2liaWxpdHk6IGF1dG87XG4gICAgY29udGFpbi1pbnRyaW5zaWMtc2l6ZTogNTAwcHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG4gICAgcGFkZGluZy10b3A6ICRzcGFjaW5nICogMjtcbiAgICBwYWRkaW5nLWJvdHRvbTogJHNwYWNpbmcgKiAyO1xuXG4gICAgJi5jdGFfX3RleHQge1xuICAgICAgICAmLS1sZWZ0IHtcbiAgICAgICAgICAgIC5jdGFfX2NvbnRhaW5lciB7XG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmLS1yaWdodCB7XG4gICAgICAgICAgICAuY3RhX19jb250YWluZXIge1xuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmLS1jZW50ZXIge1xuICAgICAgICAgICAgLmN0YV9fY29udGFpbmVyIHtcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmX19jb250YWluZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHotaW5kZXg6IDI7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBtYXgtd2lkdGg6ICRjb250YWluZXI7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICBwYWRkaW5nOiAkc3BhY2luZyAqIDQgMDtcblxuICAgICAgICBAaW5jbHVkZSBkZXNrdG9wTGFyZ2Uge1xuICAgICAgICAgICAgcGFkZGluZy10b3A6ICRzcGFjaW5nICogNjtcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAkc3BhY2luZyAqIDY7XG4gICAgICAgIH1cblxuICAgICAgICBcbiAgICB9XG5cbiAgICAuY3RhX19jb250YWluZXItLW1lZGlhIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICByaWdodDogMDtcbiAgICAgICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgICAgIHotaW5kZXg6IDE7XG5cbiAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICAgICAgICAgIG9iamVjdC1wb3NpdGlvbjogY2VudGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAmX19jb2x1bW4ge1xuICAgICAgICBmbGV4OiAwIDAgMTAwJTtcblxuICAgICAgICBAaW5jbHVkZSB0YWJsZXQge1xuICAgICAgICAgICAgZmxleC1iYXNpczogNzUlO1xuICAgICAgICB9XG5cbiAgICAgICAgQGluY2x1ZGUgZGVza3RvcCB7XG4gICAgICAgICAgICBmbGV4LWJhc2lzOiA1MCU7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgID4qIHtcbiAgICAgICAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC5jdGFfX2hlYWRpbmcsXG4gICAgICAgIHAge1xuICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIH1cbiAgICB9XG59IiwiQGltcG9ydCAnLi4vLi4vc2Fzcy91dGlscy92YXJpYWJsZXMnLFxuICAgICAgICAnLi4vLi4vc2Fzcy91dGlscy9taXhpbnMnO1xuXG5zZWN0aW9uLnRlc3RpbW9uaWFscyB7XG4gICAgbWF4LXdpZHRoOiAkbmFycm93O1xufVxuXG4udGVzdGltb25pYWxzIHtcbiAgICBjb250ZW50LXZpc2liaWxpdHk6IGF1dG87XG4gICAgY29udGFpbi1pbnRyaW5zaWMtc2l6ZTogNTAwcHg7XG4gICAgXG4gICAgJl9faXRlbSB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgICAgICBibG9ja3F1b3RlIHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAkc3BhY2luZztcbiAgICAgICAgICAgID5wIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6ICRoNDtcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNzAwO1xuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZmlnY2FwdGlvbiB7XG4gICAgICAgICAgICBmb250LXNpemU6ICRoNjtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJl9fY29udGFpbmVyIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogJHNwYWNpbmc7XG4gICAgfVxuXG4gICAgJl9fcGFnaW5hdGlvbiB7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGdhcDogY2FsYygjeyRzcGFjaW5nfSAvIDIpO1xuXG4gICAgICAgICYtLXBhZ2Uge1xuICAgICAgICAgICAgICAgIGhlaWdodDogMjVweDtcbiAgICAgICAgICAgICAgICB3aWR0aDogMjVweDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gV2hlbiBpbiBhIHBhbmVsIGJsb2NrXG4ucGFuZWwge1xuICAgIC50ZXN0aW1vbmlhbHMge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIH1cbn0iLCJAaW1wb3J0ICcuLi8uLi9zYXNzL3V0aWxzL3ZhcmlhYmxlcyc7XG5cbi5mYXEge1xuICAgIGNvbnRlbnQtdmlzaWJpbGl0eTogYXV0bztcbiAgICBjb250YWluLWludHJpbnNpYy1zaXplOiA1MDBweDtcblxuXG4gICAgJl9fY29udGFpbmVyIHtcbiAgICAgICAgbWF4LXdpZHRoOiAkbmFycm93O1xuICAgICAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgIH1cblxuICAgICZfX2l0ZW1zIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgZ2FwOiAkc3BhY2luZyAwO1xuICAgIH1cblxuICAgICZfX3F1ZXN0aW9uIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHBhZGRpbmc6ICRzcGFjaW5nO1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiA1NHB4O1xuICAgICAgICBmb250LXNpemU6ICRoNjtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJyYW5kNDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICAgICY6YmVmb3JlLFxuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYnJhbmQxO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB9XG5cbiAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgaGVpZ2h0OiAyNHB4O1xuICAgICAgICAgICAgd2lkdGg6IDRweDtcbiAgICAgICAgICAgIHJpZ2h0OiAyNnB4O1xuICAgICAgICAgICAgdG9wOiAkc3BhY2luZztcbiAgICAgICAgfVxuXG4gICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgd2lkdGg6IDI0cHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDRweDtcbiAgICAgICAgICAgIHJpZ2h0OiAkc3BhY2luZztcbiAgICAgICAgICAgIHRvcDogMjZweDtcbiAgICAgICAgfVxuXG4gICAgICAgIFxuXG4gICAgICAgICYuZmFxX19vcGVuIHtcbiAgICAgICAgICAgICsgLmZhcV9fYW5zd2VyIHtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAgICAgICAgICAgcGFkZGluZzogJHNwYWNpbmc7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgJl9fYW5zd2VyIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAkc3BhY2luZztcbiAgICAgICAgcGFkZGluZy1yaWdodDogJHNwYWNpbmc7IFxuICAgIH1cbn1cblxuLmJyYW5kMSxcbi5icmFuZDIge1xuICAgIC5mYXFfX2l0ZW0ge1xuICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICB9XG4gICAgLmZhcV9fcXVlc3Rpb24ge1xuICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICB9XG59XG5cbi5icmFuZDIge1xuICAgIC5mYXFfX3F1ZXN0aW9uIHtcbiAgICAgICAgY29sb3I6ICRicmFuZDE7XG4gICAgfVxufVxuXG4uYnJhbmQ0IHtcbiAgICAuZmFxX19xdWVzdGlvbiB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRicmFuZDI7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuXG4gICAgICAgICY6YmVmb3JlLFxuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5icmFuZDEge1xuICAgIC5mYXFfX3F1ZXN0aW9uIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJyYW5kMjtcblxuICAgICAgICAmOmJlZm9yZSxcbiAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgICB9XG4gICAgfVxufSIsIkBpbXBvcnQgJy4uLy4uL3Nhc3MvdXRpbHMvdmFyaWFibGVzJztcblxuLmZlZWQge1xuICAgIGNvbnRlbnQtdmlzaWJpbGl0eTogYXV0bztcbiAgICBjb250YWluLWludHJpbnNpYy1zaXplOiA4MDBweDtcbiAgICAmX19jb250YWluZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBnYXA6IDFyZW07XG4gICAgfVxufVxuXG4ubmV3cyB7XG4gICAgJl9faXRlbSB7XG4gICAgICAgIGZsZXg6IDEgMSBjYWxjKDUwJSAtICgjeyRzcGFjaW5nfSAvIDIpKTtcblxuICAgICAgICAmLS1tZWRpYSB7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAgICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctdG9wOiBjYWxjKCgzIC8gNCkgKiAxMDAlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgICAgICAgICAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgICAgICByaWdodDogMDtcbiAgICAgICAgICAgICAgICBib3R0b206IDA7XG4gICAgICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxufSIsIkBpbXBvcnQgJy4uLy4uL3Nhc3MvdXRpbHMvdmFyaWFibGVzJyxcbiAgICAgICAgJy4uLy4uL3Nhc3MvdXRpbHMvbWl4aW5zJztcblxuXG4uZml4ZWRzcGFjZXIge1xuICAgIGNvbnRlbnQtdmlzaWJpbGl0eTogYXV0bztcbiAgICBjb250YWluLWludHJpbnNpYy1zaXplOiA0MDBweDtcbiAgICBoZWlnaHQ6ICRzcGFjaW5nICogNDtcblxuICAgIEBpbmNsdWRlIGRlc2t0b3Age1xuICAgICAgICBoZWlnaHQ6ICRzcGFjaW5nICogODtcbiAgICB9XG59IiwiQGltcG9ydCAnLi4vLi4vc2Fzcy91dGlscy92YXJpYWJsZXMnLFxuICAgICAgICAnLi4vLi4vc2Fzcy91dGlscy9taXhpbnMnO1xuXG4uZmxleGkge1xuICAgIGNvbnRlbnQtdmlzaWJpbGl0eTogYXV0bztcbiAgICBjb250YWluLWludHJpbnNpYy1zaXplOiA4MDBweDtcblxuICAgICZfX2hhc2JnY29sb3Ige1xuICAgICAgICBwYWRkaW5nLXRvcDogJHNwYWNpbmcgKiAyO1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogJHNwYWNpbmcgKiAyO1xuICAgICAgICB3aWR0aDogMTAwdnchaW1wb3J0YW50O1xuICAgICAgICB0cmFuc2Zvcm06IG5vbmUhaW1wb3J0YW50O1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgcmlnaHQ6IDUwJTtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IC01MHZ3O1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IC01MHZ3O1xuXG4gICAgICAgIC5mbGV4aV9fY29udGFpbmVyIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgICAgICBwYWRkaW5nOiA0cmVtIDJyZW07XG5cbiAgICAgICAgICAgIEBpbmNsdWRlIHRhYmxldCB7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAkYnJlYWtwb2ludFRhYmxldDtcbiAgICAgICAgICAgIH1cbiAgICBcbiAgICAgICAgICAgIEBpbmNsdWRlIHRhYmxldExhcmdlIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6ICRicmVha3BvaW50VGFibGV0TGFyZ2U7XG4gICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICBAaW5jbHVkZSBkZXNrdG9wIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6ICRicmVha3BvaW50RGVza3RvcDtcbiAgICAgICAgICAgIH1cbiAgICBcbiAgICAgICAgICAgIEBpbmNsdWRlIGRlc2t0b3BMYXJnZSB7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAkYnJlYWtwb2ludERlc2t0b3BMYXJnZTtcbiAgICAgICAgICAgIH1cbiAgICBcbiAgICAgICAgICAgIEBpbmNsdWRlIGRlc2t0b3BMYXJnZSB7XG4gICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICRzcGFjaW5nICogNjtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogJHNwYWNpbmcgKiA2O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJi0tYnJhbmQxIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRicmFuZDE7XG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgfVxuXG4gICAgICAgICYtLWJyYW5kMiB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYnJhbmQyO1xuICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIH1cblxuICAgICAgICAmLS1icmFuZDMge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJyYW5kMztcbiAgICAgICAgICAgIGNvbG9yOiAkYnJhbmQxO1xuICAgICAgICB9XG5cbiAgICAgICAgJi0tYnJhbmQ0IHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRicmFuZDQ7XG4gICAgICAgICAgICBjb2xvcjogJGJyYW5kMTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICYuaW1hZ2VzX19sZWZ0IHtcbiAgICAgICAgLmZsZXhpX19jb250YWluZXIge1xuICAgICAgICAgICAgQGluY2x1ZGUgdGFibGV0TGFyZ2Uge1xuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICYuaW1hZ2VzX19yaWdodCB7XG4gICAgICAgIC5mbGV4aV9fY29udGFpbmVyIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIHRhYmxldExhcmdlIHtcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgJl9fY29udGFpbmVyIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIH1cblxuICAgICZfX2NvbHVtbiB7XG4gICAgICAgIGZsZXg6IDEgMCAzMy4zMzMlO1xuICAgICAgICBtYXgtd2lkdGg6IDUwJTtcbiAgICAgICAgcGFkZGluZzogMCAxMHB4O1xuXG4gICAgICAgIEBtZWRpYShtYXgtd2lkdGg6ICRicmVha3BvaW50VGFibGV0TGFyZ2UgLSAxKSB7XG4gICAgICAgICAgICAmOm50aC1jaGlsZCgxKSB7XG4gICAgICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJi0tbWVkaWEge1xuICAgICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgICAgICAgICAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59IiwiQGltcG9ydCAnLi4vLi4vc2Fzcy91dGlscy92YXJpYWJsZXMnO1xuXG5zZWN0aW9uLmhlcm8ge1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG4uaGVybyB7XG4gICAgY29udGVudC12aXNpYmlsaXR5OiBhdXRvO1xuICAgIGNvbnRhaW4taW50cmluc2ljLXNpemU6IDgwMHB4O1xuICAgIFxuICAgICZfX2NvbnRhaW5lci0tY29udGVudCB7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICBtYXgtd2lkdGg6ICRjb250YWluZXI7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgICAgIHBhZGRpbmctbGVmdDogJHNwYWNpbmcgKiAyO1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAkc3BhY2luZyAqIDI7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG5cbiAgICAuaGVyb19fc2xpZGUge1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICAgICAmLS1jb250ZW50IHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgei1pbmRleDogMTtcbiAgICAgICAgICAgIG1heC13aWR0aDogNTAwcHg7XG4gICAgICAgIH1cblxuICAgICAgICAmLS1tZWRpYSB7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG5cbiAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICAgICAgICAgIG9iamVjdC1wb3NpdGlvbjogY2VudGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLmhlcm9fX3RyYWNrLFxuICAgIC5oZXJvX19saXN0IHtcbiAgICAgICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgIH1cbn0iLCJAaW1wb3J0ICcuLi8uLi9zYXNzL3V0aWxzL3ZhcmlhYmxlcycsXG4gICAgICAgICcuLi8uLi9zYXNzL3V0aWxzL21peGlucycsXG4gICAgICAgICcuLi8uLi9zYXNzL3V0aWxzL2V4dGVuZHMnO1xuXG5kaXYucGFuZWwge1xuICAgIEBleHRlbmQgJXBhZGRpbmdfX3N0eWxlcztcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG5cbiAgICAmLmJyYW5kMSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRicmFuZDE7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgIH1cblxuICAgICYuYnJhbmQyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJyYW5kMjtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgfVxuXG4gICAgJi5icmFuZDMge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYnJhbmQzO1xuICAgIH1cblxuICAgICYuYnJhbmQ0IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJyYW5kNDtcbiAgICB9XG5cbiAgICAmX19jb250YWluZXIge1xuICAgICAgICBtYXgtd2lkdGg6ICRjb250YWluZXI7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG5cbiAgICAgICAgPioge1xuICAgICAgICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufSIsIkBpbXBvcnQgJy4uLy4uL3Nhc3MvdXRpbHMvdmFyaWFibGVzJyxcbiAgICAgICAgJy4uLy4uL3Nhc3MvdXRpbHMvbWl4aW5zJztcblxuLnBhcnRuZXJzIHtcbiAgICBjb250ZW50LXZpc2liaWxpdHk6IGF1dG87XG4gICAgY29udGFpbi1pbnRyaW5zaWMtc2l6ZTogODAwcHg7XG5cbiAgICAmX19jb250YWluZXIge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICAgICAgbWF4LXdpZHRoOiAkY29udGFpbmVyO1xuICAgIH1cblxuICAgICZfX2l0ZW1zIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBnYXA6ICRzcGFjaW5nO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cblxuICAgICZfX2l0ZW0ge1xuICAgICAgICB3aWR0aDogY2FsYyg1MCUgLSAoI3skc3BhY2luZ30gLyAyKSk7XG5cbiAgICAgICAgQGluY2x1ZGUgdGFibGV0IHtcbiAgICAgICAgICAgIHdpZHRoOiBjYWxjKDI1JSAtIDEycHgpO1xuICAgICAgICB9XG5cbiAgICAgICAgYSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcblxuICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICAgICAgICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMC41O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGltZyB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzO1xuICAgICAgICB9XG4gICAgfVxufSIsIkBpbXBvcnQgJy4uLy4uL3Nhc3MvdXRpbHMvbWl4aW5zJyxcbiAgICAgICAgJy4uLy4uL3Nhc3MvdXRpbHMvdmFyaWFibGVzJztcblxuIC5wcm9tb2dyb3VwIHtcbiAgICBjb250ZW50LXZpc2liaWxpdHk6IGF1dG87XG4gICAgY29udGFpbi1pbnRyaW5zaWMtc2l6ZTogODAwcHg7XG4gICAgIFxuICAgICZfX3N0YWNrZWQge1xuICAgICAgICAucHJvbW9ncm91cGl0ZW0ge1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5wcm9tb2dyb3VwaXRlbV9fY29udGFpbmVyIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAucHJvbW9ncm91cGl0ZW1fX21lZGlhIHtcbiAgICAgICAgICAgICAgICBmbGV4OiAwIDAgNDAlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAucHJvbW9ncm91cGl0ZW1fX3RleHQge1xuICAgICAgICAgICAgICAgIGZsZXg6IDEgMSBhdXRvO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogJHNwYWNpbmc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmX19jb2x1bW5zIHtcblxuICAgICAgICAmLnByb21vZ3JvdXBfX2NvbHVtbnMtLTIge1xuICAgICAgICAgICAgLnByb21vZ3JvdXBfX2NvbnRhaW5lci0tY29udGVudCB7XG4gICAgICAgICAgICAgICAgLnByb21vZ3JvdXBpdGVtIHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IGNhbGMoNTAlIC0gKCN7JHNwYWNpbmd9IC8gMikpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICYucHJvbW9ncm91cF9fY29sdW1ucy0tMyB7XG4gICAgICAgICAgICAucHJvbW9ncm91cF9fY29udGFpbmVyLS1jb250ZW50IHtcbiAgICAgICAgICAgICAgICAucHJvbW9ncm91cGl0ZW0ge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogY2FsYyg1MCUgLSAoI3skc3BhY2luZ30gLyAyKSk7XG5cbiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgZGVza3RvcCB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogY2FsYygzMy4zMzMlIC0gMTFweCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmLnByb21vZ3JvdXBfX2NvbHVtbnMtLTQge1xuICAgICAgICAgICAgLnByb21vZ3JvdXBfX2NvbnRhaW5lci0tY29udGVudCB7XG4gICAgICAgICAgICAgICAgLnByb21vZ3JvdXBpdGVtIHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IGNhbGMoNTAlIC0gKCN7JHNwYWNpbmd9IC8gMikpO1xuXG4gICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIGRlc2t0b3Age1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IGNhbGMoMjUlIC0gMTJweCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAucHJvbW9ncm91cF9fY29udGFpbmVyLS1jb250ZW50IHtcbiAgICAgICAgZ2FwOiAkc3BhY2luZztcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgIH1cblxuICAgIC5wcm9tb2dyb3VwX19jb250YWluZXIge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWF4LXdpZHRoOiAkY29udGFpbmVyO1xuICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICB9XG5cbiAgICAucHJvbW9ncm91cGl0ZW0ge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYnJhbmQ0O1xuXG4gICAgICAgIC5wcm9tb2dyb3VwaXRlbV9fdGV4dCB7XG4gICAgICAgICAgICBwYWRkaW5nOiAkc3BhY2luZztcbiAgICAgICAgfVxuXG4gICAgICAgIC5wcm9tb2dyb3VwaXRlbV9fdGl0bGUge1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogMC41cmVtO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogJGg2O1xuXG4gICAgICAgICAgICBAaW5jbHVkZSBkZXNrdG9wIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6ICRoNTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC5wcm9tb2dyb3VwaXRlbV9fY29udGVudCB7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAwLjVyZW07XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICAgICAgICAgICAgZm9udC1zaXplOiAxcmVtO1xuICAgICAgICB9XG4gICAgfVxuXG59XG5cbi5wcm9tb2dyb3VwaXRlbV9fbWVkaWEge1xuICAgIGltZyB7XG4gICAgICAgIGFzcGVjdC1yYXRpbzogNCAvIDM7XG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICBvYmplY3QtcG9zaXRpb246IGNlbnRlcjtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogYXV0bztcbiAgICB9XG59XG4iLCJAaW1wb3J0ICcuLi8uLi9zYXNzL3V0aWxzL3ZhcmlhYmxlcycsXG4gICAgICAgICcuLi8uLi9zYXNzL3V0aWxzL21peGlucyc7XG5cbmZpZ3VyZS5xdW90ZSB7XG4gICAgY29udGVudC12aXNpYmlsaXR5OiBhdXRvO1xuICAgIGNvbnRhaW4taW50cmluc2ljLXNpemU6IDgwMHB4O1xuICAgIG1heC13aWR0aDogJG5hcnJvdztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICBibG9ja3F1b3RlIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogJHNwYWNpbmc7XG4gICAgICAgID5wIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogJGg0O1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZpZ2NhcHRpb24ge1xuICAgICAgICBmb250LXNpemU6ICRoNjtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gICAgfVxufVxuXG4vLyBXaGVuIGluIGEgcGFuZWwgYmxvY2tcbi5wYW5lbCB7XG4gICAgLnF1b3RlIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgICAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICB9XG59IiwiQGltcG9ydCAnLi4vLi4vc2Fzcy91dGlscy92YXJpYWJsZXMnO1xuXG5oci5zZXBhcmF0b3Ige1xuICAgIGNvbnRlbnQtdmlzaWJpbGl0eTogYXV0bztcbiAgICBjb250YWluLWludHJpbnNpYy1zaXplOiAxMDBweDtcbiAgICBtYXgtd2lkdGg6ICRuYXJyb3c7XG4gICAgaGVpZ2h0OiAycHg7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRicmFuZDI7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLnBhbmVsIHtcbiAgICAmLmJyYW5kMSB7XG4gICAgICAgIGhyLnNlcGFyYXRvciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYnJhbmQ0O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJi5icmFuZDIge1xuICAgICAgICBoci5zZXBhcmF0b3Ige1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJyYW5kMTtcbiAgICAgICAgfVxuICAgIH1cbn0iLCJAaW1wb3J0ICcuLi8uLi9zYXNzL3V0aWxzL3ZhcmlhYmxlcycsXG4gICAgICAgICcuLi8uLi9zYXNzL3V0aWxzL21peGlucyc7XG5cbi5zaXRlc2VhcmNoIHtcbiAgICBjb250ZW50LXZpc2liaWxpdHk6IGF1dG87XG4gICAgY29udGFpbi1pbnRyaW5zaWMtc2l6ZTogNDAwcHg7XG4gICAgXG4gICAgJl9fY29udGFpbmVyIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIG1heC13aWR0aDogJG5hcnJvdztcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcblxuICAgICAgICBmb3JtIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJGJyYW5kMjtcblxuICAgICAgICAgICAgQGluY2x1ZGUgZGVza3RvcCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlucHV0IHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgJHNwYWNpbmc7XG4gICAgICAgICAgICBoZWlnaHQ6IDYwcHg7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmX19maWVsZCB7XG4gICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG5cbiAgICAgICAgQGluY2x1ZGUgZGVza3RvcCB7XG4gICAgICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gMTc1cHgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJl9fc3VibWl0IHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICAgICAgIEBpbmNsdWRlIGRlc2t0b3Age1xuICAgICAgICAgICAgd2lkdGg6IDE3NXB4O1xuICAgICAgICB9XG4gICAgfVxuXG5cbn0iLCIucG9zdGxpc3Qge1xuICAgIHBhZGRpbmctdG9wOiAkc3BhY2luZyAqIDQ7XG4gICAgJl9faXRlbXMge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBnYXA6ICRzcGFjaW5nO1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgICAgIEBpbmNsdWRlIGRlc2t0b3Age1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAgfVxuICAgIH1cbn0iLCIuZmlsdGVycyB7XG4gICAgcGFkZGluZy10b3A6ICRzcGFjaW5nO1xuICAgIHBhZGRpbmctYm90dG9tOiAkc3BhY2luZztcbn0iLCIucG9zdGNhcmQge1xuICAgIGZsZXg6IDAgMSAxMDAlO1xuXG4gICAgQGluY2x1ZGUgdGFibGV0IHtcbiAgICAgICAgZmxleC1iYXNpczogY2FsYyg1MCUgLSBjYWxjKCN7JHNwYWNpbmd9IC8gMikpO1xuICAgIH1cbiAgICAmX19tZWRpYSB7XG4gICAgICAgIEBpbmNsdWRlIGFzcGVjdFJhdGlvKDUsMyk7XG4gICAgICAgIG1hcmdpbi1ib3R0b206ICRzcGFjaW5nO1xuXG4gICAgICAgIGltZyB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICAgICAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmX19jb250ZW50IHtcbiAgICAgICAgPioge1xuXG4gICAgICAgICAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59IiwiLmZvb3RlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJyYW5kMTtcbiAgICBwYWRkaW5nOiAkc3BhY2luZztcbiAgICBjb2xvcjogI2ZmZjtcblxuICAgICZfX2NvbnRhaW5lciB7XG4gICAgICAgIG1heC13aWR0aDogJGNvbnRhaW5lcjtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuICAgICAgICBAaW5jbHVkZSBkZXNrdG9wIHtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICAgIH1cblxuICAgICAgICA+KiB7XG4gICAgICAgICAgICBmbGV4OiAxIDEgMDtcbiAgICAgICAgfVxuICAgIH1cbn0iLCIuZm9vdGVybmF2aWdhdGlvbiB7XG5cbiAgICB1bCB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcblxuICAgICAgICBsaSB7XG4gICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59IiwiLnNvY2lhbG1lZGlhIHtcbiAgICB1bCB7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcblxuICAgICAgICBsaSB7XG4gICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59IiwiLmNvbnRhY3RtZXRob2RzIHtcbiAgICB1bCB7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgbGkge1xuICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgYWRkcmVzcyB7XG4gICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB9XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9*/